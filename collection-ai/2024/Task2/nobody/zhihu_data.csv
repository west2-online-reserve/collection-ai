question,answers
为什么现在国内各大高校仍选用谭浩强的《C 程序设计》为教材？,"IT界有个万人皆知的行业准则：不要重复造轮子。
它的意思是，你可以自己造的玩，但是如果人家已经有足够好的轮子，你就不要试图，甚至是通过各种手段，试图去取代这个轮子的地位。
同理，如果某个学科已经有足够好的教材，您没那水平编出更好的教材，就乖乖地用人家的教材就好了，这样既节省资源，同时也能保证中国学生看到的教材内的思想和国外学生是同步的。
中国大学有个毛病，就是什么东西也想搞个自己的出来。
就比如线性代数教材，如此重要的学科，用脚趾头也能想见，优秀的国外教材已经遍地走了，但是各个大学仍然要请自己学校的某几个水平堪忧，语言表达能力菜得扣脚的老师来编写一个教材，最后命其名曰“精品教材”，而这些垃圾教材坑害的是一批一批的优秀学生，当然如果能被一直坑下去的，自主学习能力也是有点问题...
可是世界上大多数学生就是这样，他们会乖乖地去上课，听老师念PPT，然后认真看学校推荐用的课本，然后当这些垃圾教材搞得他们一头雾水的时候，他们会用“这门课难”来安慰自己，最后学的不明不白，草草了事。
我刚来中国科学技术大学的时候，上学期的线性代数，学校用的教材就是所谓学校老师自己编的“精品教材”，这个教材是面向非数学专业学生的，我就看了三页就已经搞不明白它在说什么了，可以想象，这样的教材迫害了多少学生，耗费了多少学生的时间。
而且可以想象，编这本教材的老师们从中肯定可以得到补贴，能不能得到版税不清楚，但是补贴是肯定有的，而且同时这本教材的编写也能成为所谓的资金申请的理由，“为中国科学技术大学量身定制的教材”这句话多么好听啊，可事实上呢？
由于答主英文水平过关，当时直接去图书馆借了一本英文的线性代数教材，面向数学专业的，从第一页开始看下去，便已停不下来，连住一看就是二三十页，看完感觉畅酣淋漓，舒畅至极，从那以后，线性代数课我再也没去过，除了最后的考试我出席了。
那次期末题不简单，我考了95分。
线性代数资源推荐，详情参见本人文章：
我自己知道，我并不聪明，若是我不看那本英文教材，我恐怕能考70分不错了。
这就是事实，还有很多例子，比如贵校叶邦角编的的《电磁学》和格利菲斯的《电动力学》在易懂性和深刻性上的巨大差异，前者啥也看不懂，后者看的畅酣淋漓。
《大学物理》与《费恩曼物理学讲义》的惊人对比，前者看的想要睡觉，后者看的我想要拍桌，甚至感动地流泪，甚至看完兴奋地睡不着觉。
附费恩曼讲义的链接：
The Feynman Lectures on Physics
纸质教材？？买教材？？学校让你买教材？？没有学生买教材，那这些教材不就无法带来收入了？
教材是用来教育的？No No No, 教材是用来挣钱的，相信我。
马克思主义原理你们都上过吧？这个教材是不是必须买？它为什么不做成pdf版，在网上开源呢？
每年这本教材能卖一千万册吧？没这些钱谁来养那些教材编写委员会呢？
李重光的乐理书，可能在你们眼里还算不错，但是我看完之后还是搞不明白它说的这一切是怎么运用在作曲中的，后来我有了VPN，在油管上打开了新世界，在众多即兴，乐理的视频教程中，我现在可以在任何一首歌里面即兴演奏，写歌也是手到擒来。
音乐学习的最好方法不是看书，而是看视频，因为视频是声音和图像的结合体，比如我现在讲Lydian音阶，它的音阶结构是 1 2 3 #4 5 6 7，只讲这个其实你并没有真正懂它的音响效果，这个youtube频道从图像，PPT，演奏示例，记忆法等如手，教你如何记忆指板位置，如何进行特定和声进行下的solo即兴和创作。
详情参见本人文章：
这个世界上不存在真正无法理解的知识，只存在不会表达的糟糕教学者，大家都是人，为什么你能懂的东西我就懂不了呢？就算我笨一些，能在你脑子里运行的东西也能在我的脑子里运行，只不过可能速度慢一些。
教材的目的是什么？教材的目的是让学生尽可能地不依靠任何外界帮助，仅仅依靠你的教材就能学会你想表达的知识。
可以说，我国在此方面做的奇差无比。
国内这些教材其实牵动了很多人的利益，比如学校的利益，编写者的利益等等，中国的大学可能觉得教材都用西方的，是文化不强盛的表现，总想自己搞一个，这正是不自信的表现。
你要是能编出比国外优秀教材更优秀的，那完全可以啊！
问题是你能吗？
当然还有一点就是，国内的教材更新速度捉急，很多新东西早就出来了，教材上还写着那些旧东西，考试还是按照这个教材考...
我一直觉得中国学生整体上是比较聪明的，如果我们能像美国学生那样直接接触到整个世界的优质教学信息，那我们的未来不敢想象。
不过一个学生如果自己不会去寻求改变，看的破教材还不知道换更好的，上不了Google还不舍得花钱买V*N，那这样的学生可能也干不成什么...
国外的大部分经典教材，我是说经典教材哦，不是所有！！经典教材是国外教材的一个很小的子集！ 差不多都有免费的pdf版本，直接下载就好，这对于那些没有机会接受高等教育，又买不起好教材的人是很友好的，而且不仅如此，教材配套的习题集，答案等往往也可以直接下载，反观国内的教材，一方面习题没答案，然后老师告诉你们习题最怕有答案，但与此同时老师也没有能力建立起一个足够高效的机制能马上让学生知道他们的结果是否正确，就相当于，不能给你肉吃，还要叫你多吃素，吃肉会长胖。
普林斯顿的《Algorithms 4》是业内广受好评的教材，虽然叫算法，事实上数据结构和算法的内容都有，网址：
Algorithms, 4th Edition
在页面的左边，可以直接这样寻找自己想要的内容，发挥了电子图书的优势，节省了搜索目录的时间。
在归并算法的讲解中，可以直接点击Merge.java跳转至实现该ADT的代码：
这就是我为什么不喜欢看纸质书，因为太麻烦了...翻来翻去的，真的累。
这本书有一个标准库，有绘图，排序等等，你可以直接在左下方搜索标准库里的某个API，看到该API的官方文档。
测试用例，作业，PPT等等，都直接点击就好。
我试问国内的哪个计算机教材这样做了？你恐怕是下载个pdf版都得在什么微盘，百度云，或是百度文库里面下载吧？
来，你告诉我，谭浩强的《C语言程序设计》的开源网站在哪？让我瞻仰一下？没有？
哦。
我觉得国内教材编写者最大的问题就是：动机不纯。
对于音乐行业来讲，如果教材编的太好，学生就不想找老师了...那这些音乐水平高不成低不就的人，饭碗谁给保证呢？
这个逻辑其实挺简单的，就是：你说想要看懂这个教材必须找个好老师给你讲，那你这个所谓的好老师为啥不把他讲的写成教材呢？这样大家不是就都看懂了？哪来那么多麻烦事？
事实上一个人编写的教材应该是比这个讲课要更好懂的，因为一个人写出来的东西往往是经过了细致思考的结果，而凭空就说的东西往往会出问题，那如果一个人教材写的奇烂无比，他的课我也建议你别去了，误人子弟。
所以啊，现在掌握大学权力的人，都是高考刚恢复不就参加高考的那批人，他们眼中的世界和我们年轻人眼中的不太一样，再过二十年，等我们成为了掌权者，也许这一切会变好。
学校怎么做是学校的事，你怎么做，还是看你自己。
谢谢。

看了大家的回复和评论，我挺开心的，这个答案火也是意料之中，但是能获得这么多人的认同，我深表荣幸，有人说英语差看不了英文教材的，我想说，英语的学习其实是自然而然地事情，不要在学中做，而要在用中学，忘掉中文，去完全投入英文的环境中，很快你就会适应这一切。事实上，如果你说你英文教材有些单词不认识，那我想反问你，难道这个东西翻译成中文你就一定认识了？比如线性代数的秩（Rank），你不知道秩是什么意思对吧？但你反而大概知道Rank的意思。
还有人说，我们不能这样直接用别人的，要做出自己的，这个想法其实要真往大了说，我觉得挺肤浅的，别人造个加速器，我们要造个更大的，别人造个桥，我们也要造个更长的，快歇歇吧，干好自己的本职工作就很好了。
世界上只有两种东西有真正的价值，一种是创世人所未见，一种是对已见之事的推进与优化，做一个比现有的还烂的东西，本身是没价值的，只能当作练习使用，这句话的逻辑已经很明晰了，再反驳我是不会回复的。
不要过分相信教材的权威性，也不要把老师和教授当神看，大家都是普通人，老师让你做的，也许并不是你想要的，我们生在互联网时代，已经给了我们擦亮眼睛，检验真理的能力了，我们也没必要迷信任何权威。
这世界上谎言很多，要把眼睛擦亮，做个明白人。
第二次修改答案，给大家看看如何击退杠精：
用一种调侃的语气顺着杠精说，他们就噎着说不出话了~
杠精快来~我不怕~

这个答案请勿转载。

我打个比方，大家看完我讲的之后（哪怕看似与计算机无关）、估计就能想明白怎回事了。

国内的音乐理论逻辑体系基本上就是在「李重光＋斯波索宾」这两套教材构筑的。
可能也有其它的音乐理论教材，但基本上都围绕这一套展开。
特别是斯波索宾，从苏联体系而来。
知乎有很多对这些教材的短版的讨论，我就不赘述了。

我本科是在加拿大读的（Digital Audio Arts 专业，学位是 Bachelor of Music），现已毕业了。
在本科阶段，拯救了我调性和声理论学习的，是岛冈让的《総合和声：実技・分析・原理》。
（完全模组化设计，自学者可以自己安排学习节奏、且书中的三大部分彼此互补。）
我惊讶於世间居然有对自学者如此友好的音乐理论教材，
忽然想起我首次出国之前看李重光乐理半天看不懂的样子，似乎明白了些什么。

之后一段时间内，我在知乎推荐岛冈让的《総合和声：実技・分析・原理》这套教材，
也有想著有朝一日等自己日语精进到一定地步了、就考虑翻译这本教材。
但我现在多了几份恐惧。

我在回答某些乐理问题时，很多人说我自造术语、甚至有人专门以此攻击我。
我专门买来斯波索宾的教材的简体中文译本（现在被我扔在加拿大了），才发现：
岛冈让的教材当中的术语逻辑体系，与国内现行这套苏修型音乐理论术语逻辑体系，有明显差异。

我忽然意识到：
国内这些对自学者不友好的教材所以能被推荐为圭臬，也是和某一群人的利益有关：
国内这么多音乐老师（无论是院校老师、还是面向大学外招各种年龄段的钢琴学生的老师），
当中肯定是有一定比例的人受益于下面这个现状：
「国内能买到的中文教材，大多都需要老师点拨讲解、才能让你看懂。」
我也有好几次见到与斯波索宾的和声教材有关的评论说「必须得找个好老师给你讲」。
万一有人要是将岛冈让这本书（或者同种类型的优秀教材）翻译成中文引入国内，岂不是要砸了那群人的饭碗？
毕竟，优秀的音乐教育资源，在中国，非常希缺。
剩下的那群人，要用最少的成本保住自己的饭碗，最直接的方式，就是在这个圈子里面搞封闭。
（看看 Arnold Schoenberg 的「Harmonielehre」的英文翻译，再看看简体中文译本，对比下后者少了什么，你必会有所发现。至少，我不认为「用目标语言写个 summary」就可以叫翻译了。）

在中国，从来不缺业馀钢琴10级的人，
但他们当中能够对乐曲的（包括曲式与和声在内的）格物致知能力的好坏，又是一个未知数。
而且他们往往也是师出那些和他们一样的前辈之手：
只知道怎么演奏好一个乐器，但对音乐的赏识能力仍旧是个问题。
这些人当中，有些人可能热爱音乐，有些可能只是方便给他父母脸上贴几年的金。
这些都是产业。
破坏行业的事情，这业内会有谁乐意去做呢？会有谁乐见于这种事情成事呢？

回到正题，大家能想明白为什么很多大学教编程必须 Visual Studio 6 和 C 语言了吧？
（C 语言不是所有专攻方向都需要的；VS6 包括 VB6 和 VC++6。）
哪怕咱们大陆的资讯电子类专业出身的人们自学能力再高强，
也很难改变这群大学教师「决定教什么」。

P.S.: 对于谭本人这本书怎样，请不要与我探讨。
我只负责对那些三缺帐号们（专门新注册来的水军）批次封锁、清空其评论。
可能你觉得容易学，但没准是你老师点拨得好、或者你之前的学习经历帮到你了。

P.P.S.: 一线音乐院校的学生们不要来我这里当杠精，没有意义。
我这答案讨论的问题并不会影响到你们。
你们能进一线音乐院校的话，教材好坏根本不会对你们有多少影响，
因为你们有全国最强的师资资源、使得你们自然不会去关心二三线音乐教育圈的死活。

# EOF

之前的回答过于草率，周末有空会改一下

如果换教材，怕是一并要换一批老师。我校某老师讲c语言，公开表示main的返回值应该是void，int是某些环境的特殊写法。然后上机的环境是devc，全体编译报错，课件上的代码都运行不起来，公开打脸。
以及其他经典言论：我们现代计算机，内存绝对够怎么写都不会爆，怎么写都不会溢出。上世纪我们没有钱，买正版Windows系统要给Microsoft送多少钱啊，所以我们应该用盗版系统。
"
室友想抄我的代码，给还是不给?,
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
现实中程序员是怎样飞快敲代码的？,"当你看到一个程序员的两只手在键盘上上下翻飞，行云流水的时候，多半不是在敲击代码，
大概率是在跟产品经理撕逼讨论需求
另一种可能就是在跟测试打口水仗
10%几率是在论坛码字摸鱼
1%几率是在跟MM聊天
可以手速飞快而不需要停下思考的代码，多半也可以靠Ctrl + C/V 搞定。
而当你看到程序员双目呆滞，遥望天际的时候，多半编程开始了
——————————————
6月7日更新
没想到随手写的段子
竟然戳中了这么多人的心。
感觉就像随手划了根火柴，
却炸翻了整座山头
既然这样，那我就多说点儿。

每逢项目之初，
我们飞速写下的每行代码，
都宛如十四行诗般简洁优雅，
每个变量都宛如慈父膝下的爱子，名正言顺
感觉每一处精心设计的逻辑，
都是一段完美的乐章，
应在维也纳的金色大厅永久传唱
每一段完美实现的逻辑代码块，
都应该镌刻在石碑上，
供后辈顶礼膜拜
就在你得意之际，更新SVN时，
一段“ int aa = 0;”莫名出现在你的代码里，
这感觉仿佛是石碑上被油漆笔歪歪扭扭喷上了“XXX到此一游，嘿嘿嘿”
一个不孝忤逆的逆子，
让你血压飙升，头发尽断
满屏的诗和远方，
瞬间成了眼前的苟且
—————————
9月29日更新
随着窗外街灯的亮起，
夜
谦卑地跪在你的面前，
奉你为此间的主人，
双手呈上久违的宁静

你其实并不喜欢加班，
但却有些享受在办公室独处的感觉。
日间的嘈杂、突如其来的会议、打断思路的问题
让你无法集中精神
反而是现在，
除了机箱风扇散热发出的轰鸣声，
和空调百叶偶尔发出的咔哒声，
周围一片，万籁俱寂。

你伸了伸懒腰，
略微活动了下手指，
戴上耳机，
颠了颠手边略沉的快乐水，
一切准备就绪。

空灵的音乐带来无比的专注，
专注的力量令你灵感迸发，
敏捷的思维仿佛是疾走的奔雷，
划破厚重的迷雾，
整段代码原本错综复杂的逻辑，
被瞬间照亮，清晰无比。
在这一刻，你是无比自信的，
思路没有丝毫的滞塞，
指尖在键盘丛中飞速游走，
轻盈弹跳，整块代码一气呵成，
逻辑完整得就像整除一样干净利落，
没有丝毫得拖沓。

用户的每一步操作、每一处错误，
都在你的意料之中，
你就像是循循善诱的牧羊人，
指引着迷途的羔羊，
重返阳光大道。
用户仿佛是你座下的子民，
按照你预定的轨迹，徐徐前进。
而你，
此时此刻，
便是此间无可争议的王。
......
一个电话突然打了进来：
“先生，您的筒骨粉到了，
给您放到楼下门卫那了，祝您用餐愉快！”
“好的，我下去拿。”
你将剩下的快乐水一饮而尽，
空易拉罐被捏成一个小蛮腰，
划过一道完美的弧线，
落入垃圾桶中。
你胡乱地踏了双人字拖，
渐渐消失在昏暗的走廊尽头，
唯有油亮的脑门和门禁的荧光绿，
在黑暗中若隐若现，遥相呼应。


我来回答一下吧，一天7.5个工作小时。
1.早上九点到公司，打开手机看会儿新闻，朋友圈。
2.开始进入工作状态，看哈需求有没坑，再构思一下怎么写会好点。
3.开始vc大法，找找以前的代码，copy一下，看一下能不能运行。如果没有，差不多就自己写，开发工具也很智能，给出提示，自动补全类。如果没搞过的，百度一下，看看别人怎么写的，能拷贝就拷贝。
4.大约10.30左右，休息一会儿，喜欢抽烟的就去抽烟，不喜欢抽烟就刷一会儿朋友圈，讨论一下中午吃什么。
5.这时候差不多11.30了，停下工作，准备吃饭了！
6.中午吃完饭肯定是要睡一下，13.30开始工作，这种状态能持续到15.00左右。
7.休息半个小时或者一个小时，聊天，抽烟，刷朋友圈。
8.差不多16.00到17.30再次进入工作状态。
9.准备下班了！
ps整个开发过程内心是这样的
傻逼客户，提的垃圾需求
傻逼项目经理，做的垃圾计划
傻逼产品经理，做的垃圾需求，看不懂
傻逼测试，不会测试，乱点
傻逼同事，写的垃圾代码
傻逼架构，搞的垃圾架构
傻逼百度，找不到查不到想要的问题
众人：傻逼开发！

直接上视频，看看现实中程序员和想象中的程序员敲代码有何不同！

是不是发现自己生活被偷窥（手动滑稽

当然不仅仅如此：
现实中，很多程序员更熟练运用 Ctrl/Command + C 和 Ctrl/Command + V。
拿到一个需求，先搜有没有轮子，能直接用，绝对不自己写。能通过改改改就能用，绝对不自己写。
当然，如果他写的烂，我还是会嘲讽一波，然后自己写个更好的（手动傲娇

我是程序员客栈，中国领先的程序员自由工作平台，技术新人力解决方案。
我们签约经验丰富的程序员，采用线上开发、驻场工作、招聘猎头等方式，帮科技企业解决软件开发和技术用人难题，为程序员提供新式工作机会。
程序员客栈的使命是为程序员服务，当好程序员的经纪人，布道先进技术。

我的相关回答：
"
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
你的编程能力从什么时候开始突飞猛进？,"百度多了
你就明白：它也许有用，但它封印了你精进计算机英语的机会。
Google多了
你就明白：各地大佬们的文章很Nice，但它们仅是你技术知识体系的精华补充。
开始读书了
你就明白：你以往东拼西凑几十篇烂文才明白的事，书上那几页纸都写着，而且详细的很。
接触到国内外大社的经典书后
你就明白：那些烂大街的21天宝典，7周速成，都是些什么玩意，误人子弟！
图灵牛逼，动物牛逼，Manning牛逼。
好书读多了
你就明白：技术是一环扣一环的，有牢固的技术知识体系，学啥都事半功倍。
多做业务
你就明白：所学的技术该用在哪。
多做用户量大的业务
你就明白：光会用技术，和用好技术是两码子事。
多找第三方开源
你就明白：原来工作摸鱼不是梦。
太随便用第三方
你就明白：某天需求一变，它兼顾不到，可以把你往死里坑，坑到你得去看源码。
第一次看完源码
你就明白：开始还是很讨厌的，等全盘搞明白了，发现“咦~有点意思”。
源码看多了
你就明白：自己的查克拉莫名的增多了。而且吐槽文档不全的习惯也渐渐少了，一个不服就跑去观摩别人的源码，顺便偷个师。
再往后，或许你的技术确实突飞猛进了，然而你却只会觉得编程本来就是这个样子的。
因为，但凡通过点滴付出，累积出来的结果，都是平淡无声的。
突然获得这么多支持，十分感谢大家。
知乎就是师兄的心得记事本，喜欢的可以关注哦~
「卫星｜ktshixiong，深度职业规划＋」
一、新手进阶，可看
《重构 改善既有代码的设计》
本书的优点：篇幅短小，示例经典，讲解细致。最重要的是新手读起来不费力，可以作为长久阅读的床头书，开卷必有益。
本书的作用：帮助你学会如何写出有层次的好代码，让你在工作中赢在细节，更容易获得有实力的前辈的认可，职业发展更轻松。
二、寻求职业长久发展，可看
《人月神话》
本书的优点：偏重于讲述编程哲学，几乎无代码阅读成本，笔者像一位睿智的导师，以亦师亦友的口吻，有条有理地为你分析各种项目问题，分享各种工程与人的权衡，还有可靠的处理准则，有志于在编程事业上长久发展的朋友推荐阅读，可以少走很多弯路。
本书的作用：主要是打开你规划工程的格局，次要是积累行业谈资，一石二鸟
《UNIX环境高级编程》
本书的优点：就是全书都是优点，UNIX作为经典中的经典，它的设计理念，基础功能的实现方案，都是值得熟透于心中的，无论往后有多少新系统，最底层的东西都是大同小异。书的内容量大，适合长年小口啃。
本书的作用：打牢基本功，基本功是你技术高度的基石，永远要记住这一点。
此外，不要局限于自己是什么IT岗，只要能帮助你积累优秀的技术思维，好资料再多也不嫌多，职业路走宽了，在IT行业，你什么时候都能走得雄赳赳气昂昂。
更多优秀技术书籍，请看师兄这篇新文章就够了
适合程序员入门与进阶，阅读目的都有说明
→ （持续更新）
相关 IT 高赞干货：
师兄总结的一波行业经验（精华版）
→
师兄多年来对编程的小感悟
→
→
师兄谈自学编程的小心得
（带过 10 来位新人入行的经验）
→
→
师兄关于职场的经验分享
→

以下为冷门，但我自己很喜欢的知识点。
师兄讲编程的难，有趣又真实得心痛
→
师兄实践了多年的自律方法论
→
师兄关于优秀书籍的分享
→
最后，
还是万分感谢大家的支持^_^。




update:
评论区很多学弟学妹要求整理一个学习路线，刚写了篇文章：
从小白到后端工程师的自学之路 - MutexLock的文章 - 知乎 https://zhuanlan.zhihu.com/p/130364187
---------------
在啃掉一本本计算机经典书籍和写下大量代码以后。
疫情原因回不去学校，作为一个马上毕业，即将入职腾讯的大四生，分享一下自己的学习历程吧。
本人在大学之前从未接触过编程，最开始的编程学习还是在高考完后，从书店买了本C Primer Plus，然后暑假开始啃，前前后后也就看了几十页。
大一上的时候，来到了华中师范大学，还没有转专业到计算机，一直在自学C语言和看一些计算机入门书籍（编码、计算机科学概论）。当时也很迷茫，不知道以后道路如何，所以也学了一些杂七杂八的东西（前端 python啥的），所幸的是，当时坚持把C Primer Plus结结实实地精读了一遍，而且几乎练习题都做了，算是比较好的开端。
大一下，转专业到计算机了，开始自学数据结构，算法和C++，部分看完了 数据结构与算法分析，并且把书上的数据结构实现了一遍，记得当时五月份给自己的flag是看完C++ Primer，然后每天上课看，晚饭吃完后也跑去七号楼刷书，最后囫囵吞枣似的看完了大部分。
大一暑假，txr大佬 @杏仁糖 给我说他面试通过了华科的联创团队Unique Studio，而且给我说他们团队都特别厉害，有些人在军训的时候就把C++ Primer给蹲着看完了，当时十分钦佩，幻想也能够进入贵团队。于是打算在大二上的时候，去报名他们的秋招。所以，那个暑假在学校自学，呆了五十多天。最初，拿起一本APUE，看了一章后感觉看不懂又放下了。然后，又拿起一本红色封面的算法第四版，这本书看完了，并且用C++把上面的算法都实现了一遍。另外，听知乎大佬说CSAPP是必看的神书，当时也懵懵懂懂地看了前面三章，做了lab。为了学习linux，还看了一本叫linux命令行大全的书。武汉的夏天很热，只能寂寞待在宿舍的我，打开了LeetCode的世界，写了一百多道题。
大二上，十月，忐忑迎来了联创的面试，前面两轮都过了，直到其特色的“熬夜测试”环节，因为实力不足+精力不足，测试败北，没有通过。清晨七点，在回学校的公交车上思考自己不足，总结是知识体系仍然不够完全，而且深度也不够。后来这个学期有点“误入歧途”的意思，入了Machine Learning的坑，记得当时花了好几个月刷完西瓜书和吴恩达机器学习课程的讲义（真佩服当时的毅力，都是英文和公式推导），后来想了想，ML/DL这个东西有点玄学，于是毅然决定成为一名做工程的程序员。总的来说，虽然这个学期的时间都投入到ML的学习中，没有学习工程方面的东西，只有用python写了一点好玩的爬虫，但是给了我以后坚定走工程方向的决心吧。
大二下，这个学期是打下计算机知识基础的关键时期。从知乎找了一系列书单，看完了CSAPP（做了lab，为了bomb lab还通宵了，强迫症想让自己把炸弹都拆了）、半本算法导论、effective C++、计算机网络系统方法（前三章）、部分TCP/IP详解等，做了一些项目，比如正则引擎（这个是参考了轮子哥的教程）等等，尝试写JSON库（未遂）。其实，因为学校只是一个普通211，找到好工作的学长学姐先例很少，一直是没有信心自己能去大厂，直到当时了解到myk @孟永康 学长在春招收割了一系列offer后，才有了些许信心，相信自己如果能够像他那样努力，那么也能够找到好工作（感谢myk学长那时的鼓励和指导）。所以，定下了一年把自己水平提升到能够在大三下春招的时候拿下大厂offer的目标。
大二暑假和大三上也一直为这个目标奋斗，补上了APUE、部分UNP、深度探索C++对象模型、STL源码剖析、操作系统概念、操作系统真象还原、Linux多线程服务端编程、部分C++ template、部分C++ Concurrency in Action等书籍。然后，也一直没有放弃刷题，LeetCode写到了三百多道。同时也做了一些项目，跟着操作系统真象还原写的操作系统、简单的协程库，阅读了一些优秀的开源项目，SGI STL、muduo、libgo、libco等。中途还对haskell产生过兴趣，打印了一本Learn Yourself Haskell For Great Good，看完后感觉坑太深，还是专注找工作吧，haskell对我一直都有很强的吸引力，但是这种也只能作为爱好吧。另外，编译器也是有这种魔力，看了部分编译原理（龙书）、部分现代编译原理（虎书）和部分Engineering a Compiler，多次尝试写自己的编译器，多次未遂（不过现在有空了，在补上之前的烂尾项目）。当年的笔记哈哈：
时间到了12月份，9号楼某个自习室内，txr大佬一直鼓励我去投简历找实习，本来我一直畏畏缩缩，对自己不太有信心，被鼓励后想着投就投吧。当时投了字节跳动和momenta的实习，面试都比较顺利，于是在大三上就在字节跳动开始了愉快的实习，比自己的计划早了大半年。当时为了准备面试，看了好多牛客网的面经，查漏补缺式地补齐自己的知识盲区。
大三下，基本都是在实习，学习了很多工程实践上的东西，接触了go的技术栈，并且对devops和软件工程方面有了认知，包括代码管理、发布流程、微服务啥的。然后实习的时候骑驴找马，找到了腾讯的暑期实习。因为这个时候没有了找工作的压力，所以开始学一些自己感兴趣的东西，包括Rust（至今水平还是不太行）、分布式系统（DDIA、MIT6.824等），零零散散学了点东西。
大三暑假，腾讯实习了两个月，开始学习kubernetes、各种中间件等实际业务用到的东西，这个时候就感觉拥有到扎实的计算机基础是最重要的东西。
最后，顺利拿到了腾讯转正和字节跳动的秋招offer，两家都给的比较高，选择了工作体验更喜欢的腾讯哈哈。
总的来说，学习计算机是需要积累的，花一两年时间啃下那些厚厚的经典书籍后，才能构建自己的知识体系，然后阅读大量优秀源码，做一些有趣的项目，编程能力就能突飞猛进啦。
现在回头来看，大学时光真是如此宝贵，这是人生中为数不多可以静心学习的一段时间，可以不用考虑任何其他事情，每天学习十多个小时。
部分藏书：









大学时浑水摸鱼，毕业后大约半年，在网络上寻找自学资料时，发现了GitHub和一些程序员论坛，自学了py，然后打开了新世界的大门。
包括购买了梯子，独自啃下两套纯英文官方文档，在GitHub上友好亲切的交流，刷题，看最新的软件工程实践书，等等
===========更新2：===========
一些人问《哈弗大学幸福课》在哪里看
我是在这里看的：https://www.bilibili.com/video/BV1Gs411o71d?p=1
其他的我不知道
=========== 更新 ============
断断续续的收到一些赞，写一些可能对大家有帮助的东西吧：
1、提高知识最好的途径是读书，包括但不限于计算机四大名著《操作系统》《计算机网络》《数据结构》《计算机组成原理》。经典书籍不仅仅有完善有效的知识，更重要的是这些书里的计算机经典思想，一直到现在都没有过时，十分的有用。
2、Github是个好网站，值得习惯性的到上面搜索需要的东西。比如awesome系列和一些质量很高的资料整理项目（整理常见的面试、刷题、常见工具链的git repo）
3、v2ex和知乎都是很好的网站（尽管审核方面被吐槽很多），论坛上有很多很厉害的大佬，关注认真答题大佬的动态对开拓知识领域是有一些帮助的。
4、善用搜索引擎（专指Google），最好能把自己最常用的工具的官方文档啃一遍。主要是习惯英文文档的表达方式+系统的认识自己所用的工具，对自己写文档也是有很多帮助的。
5、因个人有长期的抑郁经历，所以对心理方面关注得也比较多，十分推荐学习《哈弗大学幸福课》。这门课的综合内容十分丰富，实践性很强，能够有效的提高生活、职场中的软技能（沟通能力、抗压能力等）（这门课另外一个很厉害的地方在于，仅仅是上课的方式，也能提高你的逻辑思维能力，毕竟据说是哈弗学生选修最多的课，课程质量极其的高）。
6、有一个我自己打算做但实践得还不太好得地方：看经典开源项目得源码和架构。只看过一些小的玩票性质的开源项目，也学到了不少东西，大型的经典的开源项目还没能看（STL、Git等），这些项目对我来说主要是太庞大，时间上有些不够用。
7、最近在坚持做Leetcode每日一题，也推荐大家一起刷呀。保持手感，很多题看起来简单，但评论区也能看到有趣的知识。
8、关于职业规划这种事情，我以前是没有的（主要还是抑郁+低自尊影响的吧）。现在获取的信息太多太多，没有职业规划很容易被带偏。我是在做了长期的心理咨询+《哈弗大学幸福课》，工作、生活上都有一些经历了之后才慢慢想清楚自己将来的生活与工作要怎么打算。这种事情想清楚过后，做自己想做的事情目标会比较清晰，不会得过且过。

感谢阅读，祝好。
"
室友想抄我的代码，给还是不给?,"给，但是换一种方式，别微信传，也别U盘。
Github上创建一个Repository，先空着。让他Star你。当然他一个人还不够，让他想办法发动更多人去Star。
超过10 Star，你就把代码Push上去，然后让他Fork。
超过100 Star，都不用他修改变量名，服务到家，你帮他改。然后用他的Github账号Pull Request。
这个Repository留着，以后学弟学妹们都用的到。平时Private，有人找你要代码，就把他加为Collaborator。这就是Github允许私有仓库人数无限制的福利。
这么多Star不仅仅是数字，而是你毕业找工作时简历上最亮的那颗Star。记得找工作期间Make Public。
不是开玩笑，如果我是大学老师，我就要求学生这样交代码作业。这是程序员的必备技能。我会给每一个班创建一个Organization，他们交作业我都知道，代码有问题就发Issue。全专业的学生互相Follow，谁的代码写得好，大家就Star。下次上课，我可以打开Github，讲评一下比较好的代码，也可以让同学们互相学习和评价别人的代码。
大一新生入学，先学习Github的基本用法，然后一项练习就是Star学长们的Repository，为他们找工作贡献一份自己的力量，这个优良传统一届一届传承下去...
软件程序的一个根本特征就是可复制性，这是其他行业没有的特质。开放源代码也是目前软件产业发展的一个主要驱动力。应该让即将从事这个行业的新人们更早更深刻的认识到软件可复制可分享的本质特点。
关于如何最方便的浏览GitHub上的源代码，我之前专门写过文章。这里只给一个最简单最酷的办法，看这个视频：
演示的是浏览LInux一个C程序代码。
只需要把http://github.com换成github.githistory.xyz就可以浏览当前源代码文件以及它的历史变更。


当然可以给，但是建议你在代码里做点手脚。
最初级的方法是在代码头部加入版权声明的注释，像下面这样子（以 C++ 程序为例）。但这种方法只能针对看都不看，直接原封不动地复制粘贴交作业的室友。
对于那种稍微警觉一点的，会复查源代码的室友，会把以上注释去掉，甚至换成自己的注释，到头你反而解释不清楚了。这时候就需要将版权声明放在稍微隐蔽一点的地方。比如，使用 ASCII 码来代替纯粹的英文字符，将版权声明隐蔽到运行结果里。
这样的话，室友即使复查你的代码，肯定也看不懂那串数字是什么意思（这都看懂了那还会找你抄代码吗！），越是看不懂的就越不敢乱改，等把作业交上去以后，老师一运行，自然知晓真相。
但是这样还不保险，万一室友运行了一遍程序，发现了你隐藏在代码里的版权信息怎么办？没关系，我们可以用条件触发器，超过指定的时间才显示版权信息！
如此，就既不丢人情，也不怕被卷入抄袭风波了。
更新：补充 cout 和 endl 前漏写的 std 命名空间。

我不光给 我还传到校园网上。。。我毕业十年了。。。学校里还流传着我的代码 恶心着一代又一代的老师。。。
话说。。当年的代码写的真是烂啊。。。

现有回答的答案都服务太不到位了。
岂止是要给啊，还要为了不让老师看出来，给改好了再给。

想当年我上大学的时候，老师留的作业，我也是啃了好久才啃出来。
然后，顺理成章地，同学们就来索要了。我说好，为了不让老师看出来，我给你个变种的版本。（你那水平，给你去改我都不放心。这句话没说出来。）
于是，一个作业我写了4份，每份的算法都有些差异。每次我都有新的收获和进步。（那年头，我们一个寝室8个人。）
等我把4份写完了给他们，我再取其精华，充实一下自己的作业，我还是那个最好的。
要不是那样，我怎么能理解内存分配、怎么能掌握调试的精髓？

所以，要给。如果有精力还要多给几份，多改改。
这是不可多得的练习重构代码的机会。

一个附带的效果，就是我虽然人单力薄，但是在寝室里从此说一不二。谁敢忤逆，我就一句话：你还想不想毕业了？

至于他们今后的死活，能不能找到工作……那我就管不了那么多了，我跟他们还没那么深的交情。

伤害室友感情级别，由低到高：
1、给他抄。
2、给他抄，但附加合理的收费。
3、不给抄，但提供帮助/思路
4、礼貌且果断的拒绝，明确表示我不愿意让别人抄作业，关系再好也不行。（让他知道这是你的原则，不是因为你不把他当兄弟）
5、犹豫且模棱两可的拒绝。
6、用拙劣的借口拒绝。
7、拒绝并附带嘲讽（划水挂科活该，您配吗？）
8、爽快答应，但暗中使用手段，使室友被查出抄袭。

你室友想抄你，他自己也会觉得理亏，你不给他抄不太会影响友情。（如果实在来不及了，你们关系又不错，可以适当帮一把）
但你要是答应给他抄，然后背后捅刀子，别说这段友情必然凉凉，你的臭名甚至会传遍整个专业整个学校。大家都知道xx班有个笑里藏刀的小人，表面装好人，背后害自己兄弟。
做这种事，老师不但不会夸你机智，还会瞧不起你。我们班就有一个偷偷举报污蔑同学被抓包的，老师同学都不正眼看她，可想而知一切奖项好事都没她的份了。
"
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
有哪些顶级水平的中国程序员？,"ACM世界冠军陆靖，现就职阿里云，为人十分低调，公司内号称“人肉逻辑机”，他做事不轻易动手，深思熟虑后开干，一气呵成，鲜有编译错误。遇到搞不定的代码找他时，他就看代码，不调试，一遍一遍看代码，然后指出某行代码有错误。我们都觉得他看代码的时候大脑其实就是多核CPU，在一次又一次的运行代码。某次代码遇到bug,良久无策和另外一个同事打电话问他，他在电话里说你们检查下某个cpp文件的780行左右，是否参数传递有问题，一查果不其然，问他是否在电脑边，他说不在，在肯德基吃饭，众人大惊之下去git blame,发现这代码他8个月前提交过。特别聪明的本身少见，特别聪明而且记忆力超强的更是凤毛麟角。
他有一个爱好是看日本动画片，为此自学日语，最后能和日本人正常沟通，参与字幕组做翻译。
好多人留言问他的情况，这里统一补充答复，他是我见过的最纯粹自由的人，对钱，对名誉毫无兴趣，对别人怎么看他也不在乎，只对挑战性的问题有浓厚的兴趣和异于常人的专注。

在鹅厂职级调整前，做到T5（科学家）的程序员，水平和履历都很能打。比如下面这位大佬：
吴石曾经是全球提交漏洞数量最多的个人。
他曾独自发掘超过100个Safari的CVE漏洞（“Common Vulnerabilities & Exposures”，公共漏洞和暴露）。
他曾创造过单月申报微软漏洞数量全球占比10%、独自发掘15个iOS漏洞的惊人成绩——这个数字比同期苹果自家研究人员发现漏洞（6个）的两倍还要多。
他曾发现只要给对方的QQ发送一条消息，就能够得到对方电脑的权限，进而控制对方的电脑，这对于受众巨大的QQ而言无疑是颗不定时炸弹，从此推动腾讯安全应急响应中心（TSRC）的成立。
据说初二之前吴石的数学非常差。但后来遇到良师启蒙，他对数学的兴趣一发不可收拾。高二拿了全国数学竞赛一等奖，后来考入了复旦大学数学系。
上了名校的吴石也和在座各位一样打游戏，但不是帝国时代和红警2，而是叫做“MUD”。但人家玩着玩着就黑进了游戏的服务器，并且成功修改了自己的游戏数据，从此走上了走漏洞之路。
你玩王者只想着喷队友，别人玩游戏自己开挂，这就是差距啊同学们。
整个大三吴石几乎都在搞计算机，他去软件公司打工，以至于几乎没有上一节课，但就是这样人家也就挂了一科。
一次偶然的机会，吴石向微软提交了可以实现系统提权的高质量漏洞，出乎他意料的是微软居然提供了奖励——要知道在当时的环境下，国内很少有公司能做到这么体面的事情。
受宠若惊的大神一发不可收拾，没多久又提交了数十个漏洞，这甚至超过了微软自家安全团队，2007年他收到了来自微软的offer。
再到后来，漏洞大牛的简历愈发丰满：
在加入KEEN Team后，吴石和队友们用两种不同的姿势搞定了 Safari，拿到了数万美金的奖金。第二年全世界的黑客用类似方法掀起了挖掘 IE 漏洞的狂潮。
2013年，腾讯抛出橄榄枝，吴石成为科恩实验室的首席科学家。2016年他带领科恩实验室团队和腾讯电脑管家组成的联合战队 Sniper 一举拿下了 Edge、Safari、Chrome，总分38分，以超越第二名13分之多的优势摘得了“世界破解大师”，比赛中所有的破解中都至少有一个吴石系统跑出来的漏洞。
当然现在更为人所知的，是他和他带领的科恩实验室团队对特斯拉的多次破解。
参考链接：
腾讯科恩实验室吴石，站在 0 和 1 之间的人

没想到这个问题这么多人关注，有兴趣了解鹅厂程序员的小伙伴，可以再看看这两篇：


1、蔡景现 （多隆）
2000年加入阿里巴巴，在阿里的花名叫“多隆”；（经网友提醒是花名，不是外号，对不起我不严谨）
2003年，被马云拉进了一个秘密项目，和另外两位工程师一起从零开始，要在一个月内，搭建一个名叫“淘宝”的网站，并涵盖所有交易系统和论坛系统；
2003年-2007年，独自维护淘宝搜索引擎，并且这还不是他全部的工作；
2014年，被邀约成为阿里巴巴合伙人。
阿里系统软件事业部研究员毕玄说，“牛P很多，但能被称为‘神’的只有多隆一个。他在解决故障方面的能力更是无人能及，在淘宝的故障解决历史上有N多的案例。”
阿里中间件研究员小邪随手举了两个例子，“五彩石项目多隆完成了商城搜索的dump逻辑，当时如果没有多隆，整个项目需要延后2周；还有一次，淘宝session框架调用session_tair故障，一堆人（应该有10人+）一起排查问题，从6:00排查到第二天的6:00，最后多隆查到了问题。”

同样是阿里合伙人、天猫技术部副总裁范禹，之前在淘宝有个习惯，碰到搞不定的技术问题，就去找多隆。

2、章亦春
春哥的编程之旅起于抄书，就算如今已是罕见的编程高手，春哥依然逢人大力推荐他的抄书学编程之法

江苏镇江人，1999年，初中的章亦春第一次接触《C 语言程序设计》靠手抄自学编程，进入江苏大学后，一发不可收拾的迷恋上开源世界。

结束淘宝量子统计的工作后，全心从事 OpenResty 等开源项目的工作；

2017年，在美国创办了 OpenResty Inc. 公司。

有人说：“这是个不需要技术圈“网红”捧的务实大牛。一个牛逼的好人。是我见过的最Geek的工程师。”

3、陆靖
（中间捧奖杯那个）
ACM世界冠军，为人十分低调，公司内号称“人肉逻辑机”

不调试，一遍一遍看代码，就能指出某行代码有错误；

爱看日漫，为此自学日语，最后能参与字幕组做翻译。

尤雨溪
在美国留学时，曾经用两天时间，就复制出一款H5的Clear软件，在APP Store上线一天，就取得了付费版和总版第二的成绩。
2014年2月，尤雨溪开发了一个前端库，就是我们熟悉的Vue.js。Vue发布后，受到很多前端程序员的喜爱，很大程度上提高了前端程序员的开发效率。
后来尤雨溪希望自己能够将所有精力都放在Vue.js上，希望全职去开发和维护，在patreon上进行众筹，最终众筹的效果也是让他非常满意，每月能收到一万美元的赞助。
为了大力推广Vue，他经常出现在JS的各种交流会上，给广大开发者分享Vue的开发经历，使用Vue开发的方法和技巧。
在他的带领下，Vue.js正在茁壮成长，国内很多大小公司都在使用Vue，相信你也一定使用过这款前端的开源框架。
尤雨溪全职做Vue后，已经赚取人民币上千万了，真是非常厉害的程序员，值得我们大家学习。
这就让我们不得不深思，同样是程序员，人家怎么这么厉害呢？
蔡景现
蔡景现被称为阿里的扫地僧---“多隆”，是阿里巴巴初创时加入的三名工程师之一，也是阿里巴巴新增的三位合伙人之一。非科班出身的他，在一个月内从零开始搭建出了现在的淘宝，为了解决项目问题，常常在半夜爬起，去排除故障、去解决问题，独自维护淘宝搜索引擎5年，被称之为“码神”。
他精通C/C++/Java，从前端到后端，在从技术底层和高层业务之间来回切换，阿里的CTO对他做出过很高的评价，一个人能够顶得上一个团队。比如，写一个文件系统，别人做可能是一个项目组或一个公司，而他在很短时间内就能从0到1一个人做出来。
在所有工程师的眼中，他是一个神，甚至在公司内网的便签上，他也被称之为神。他很有钻研精神，很喜欢写代码，很傻很天真，写代码可以写到出神入化的状态。
我们应该像蔡景现一样，要有钻研精神，多写代码，多做项目，多学习；编程只是一个技术活，多做练习便能熟能生巧，将来也会成为一名出色的技术专家。
陈皓
陈皓被大众称之为“皓哥/耗子哥”，他在博客上写出了很多经典文章，推荐大家可以去看看，他的博客：http://coolshell.cn。
他从事软件已经17年多了，对底层技术架构早已了如指掌，曾就职于亚马逊、汤森路透等，目前正在进行创业。
阮一峰
阮一峰是一名经济学博士研究生，依靠对技术的执著和热情，不断学习钻研，成为了一名IT专家。他热爱技术、热爱写作、也热衷于开源。
他是经济学里写博客最好的，写博客将IT技术写得最通俗易懂的。前端的同学对他应该不陌生，估计很多学前端的同学都是跟着他的博客学习的，他的文章随处可见。
他翻译的著作有：
《黑客与画家：硅谷创业之你Paul Graham文集》
《软件随想录：程序员部落酋长Joel谈软件》
《异常流行幻象与群众疯狂&困惑之惑》等。
章亦春
大家都称他为“春哥”，他曾经就职于中国雅虎、淘宝、Cloudflare等。他的编程之旅开始于抄书，他很喜欢向大家推荐他的抄书学习编程之法，毕竟他可是从抄书到开源之巅的。
现在的春哥已经全身心投入到OpenResty中，希望OpenResty未来能在工业界、互联网等行业掀起大风大浪，引领机器编程革命。
如果有小伙伴想知道春哥是如何通过抄书学编程的，可以去图灵社区看看春哥的专访，里面记录了春哥的成长心路历程。
陆靖
他曾经是ACM的冠军，现就职于阿里巴巴，在公司内部被称为“人肉逻辑机”。他为人十分低调，做事情深思熟虑，做人十分低调，做事不轻易动手。
当有搞不定的代码时，他不是调试代码，而是逐行逐行的看代码，然后将某一行的代码错误指正出来。我估计他在看代码的时候，大脑就已经在运行每行代码了，大脑就是他的多核CPU。
之前网上流传着他的一个传奇故事：某次代码遇到Bug，他的同事无法搞定，打电话向他求助，他在电话中直接指出某个CPP下第780行的代码，这里估计有传参问题，他的同事一查，果然是这里出现了问题，问他是否在电脑旁，他说他正在外面吃饭，这让他的同事很是惊讶。
田春
他号称中国Lisp第一人，人称伞哥，他的思维远比技术值得关注。曾就职于网易云，在业内声誉很高，他的成绩我就不过多的介绍了。
有情趣的同学可以去看看伞哥的日记，地址：https://dirtysalt.github.io/html/binghe-blogs-notes.html
他的性格古怪，他坐在丁磊办公室的旁边，经常跑到丁磊办公室，将丁磊正在充电的手机拔掉，给自己的手机充电。
因为性格的古怪，后来被丁磊给开除掉了。离职时在博客上写：CEO 丁磊先生跟我性格不合，难以共事，但因为我工作成绩突出，无法直接开除，而我又深深留恋这家公司，不肯主动辞职，于是不得已将我劝退，给予 N+1 补偿，并言辞恳切地请我走人。所谓 “好聚好散”，我不得不接受。
伞哥走的时候说，他不会怀恋网易的，只会怀恋战友，等他下次回网易的时候，就是收购网易的时候。
Gray Wang
根据 FTX 和 alameda 的股权价值，2022 年 4 月 ， 在福布斯新一期的富豪榜上， 年仅 28 岁的 Gary 以 59 亿美元的身价成为了 30 岁以下最富有的人。
作为最神秘的亿万富翁高管，Gary 平时性格神秘，很少公开露面，网上照片屈指可数，连公司同事都经常很长一段时间见不到他，甚至领英的照片也只有一个背影。
Gary 出生在中国，8岁后就随父母移民美国新泽西，他从小学习成绩出色，尤其在数学和编程方面展示出了很高的天赋和兴趣。
2010 年他参加高中数学竞赛，刚好结识了 SBF 和 Trabucco （FTX的另外一名高管），三人共同参加麻省理工学院（MIT）举办的数学夏令营培训，三人皆顺利进入麻省理工学院的数学专业，Trabucco 和 Gary 攻读数学和计算机学士学位， SBF 则攻读物理学学士学位。
SBF 和 Gary 在大学中逐渐建立信任，他们做了三年室友，学习之余，他们常一起打游戏，做谜题。在空闲时间里，还会共同参加 Epsilon Theta 的兄弟会。Gary 性格沉默内敛，很多人都觉得 Gary 难以沟通、不好相处，但 SBF 在多年的观察中，深谙 Gary 的性格和能力，尤其知道 Gary 在编程和数学方面的天赋性（Gary 曾获得过 MIT 编程竞赛的冠军）。
“很多人觉得 Gary 无法相处，就和 Gary 保持距离，但我不会，我认为 Gary不想刻意远离这个世界，他非常聪明，而且他可以腾出时间去思考一些很困难的问题。”SBF 这样回忆道。
他们多年的求学经历结下了深厚的同窗友谊，毕业后 SBF 去了华尔街的交易基金 Jane Street 做交易工作，Gary 去谷歌做机票价格的整合引擎 Google flights 的开发。
2017 年 11 月， SBF 在旧金山创立了量化交易公司 Alameda research ，专注于加密货币市场的量化交易。 第一时间里，SBF 就想到在谷歌工作的 Gary，他立刻飞去波士顿，说服 Gary 加入 Alameda ：“你的天赋来做交易一定能行，加密货币市场充斥着无数的新机会，我们一起创造！” SBF 为 Gary 生动地描述着他的雄心壮志与抱负。
Gary 认为在谷歌的工作确实感受不到挑战，于是接受了 SBF 邀请来到旧金山。
他们经常并肩战斗，Gary 没日没夜的编写代码， SBF 经常睡在公司，两人每天只睡 4-5 个小时。
一开始，SBF 用自有资金运作 Alameda，买卖主流币和山寨币，但业绩不佳，甚至每天的损失高达 50 万美元。
但在 Gary 加入 Alameda 之后，团队在很长时间的摸索之后，确定交易策略为利用日本、美国和韩国之间的比特币差价套利。在最关键的一环中，Gary 为 Alameda 写了整个量化程序，用于快速在不同的交易市场中套利，这套程序只要捕捉到交易所之间的价差并迅速执行，就能完成一笔无风险套利操作。凭借着这个手段，SBF 更是从投资人那里拿到了 1.7 亿美元的融资，Alameda 一天的交易量一度超过数十亿美元，每天收入可以做到惊人的 2500 万美元。
然而这并不是一切的开始，早在 2018 年， SBF 就请求 Gary 写过一个比特币交易所的程序，Gary 一个月就完成了一个交易所 CryptonBTC。虽然后来没有做成产品，但 SBF 深知如果让 Gary 来写合约交易所程序，他一个月内也可以完成，并且比市场上任何的交易所写出来的质量都要好。Gary 是一个不折不扣的程序天才。
但当时合约交易所普遍存在的问题是，当客户的头寸经历损失，并且需要追加保证金，交易所会先请客户追加保证金，如果市场变化太快，交易所就会先承担资金的这部分损失。
在后来的合约交易所的代码中，Gary 发明了一个新的清算引擎机制，可以按秒为单位来监控客户头寸，当客户保证金不够的情况下，立刻执行清算，从而保护了交易所的资金。虽然这个功能让交易者感到厌烦，但是解决了长期困扰众多交易所的关键问题。Gary 为 FTX 加入清算机制后，Binance、Kraken 和其他交易所也跟进开发了这个功能。
此外，在一般的合约交易中，用户需要有对应资产的抵押进行借贷， 缺少资金的灵活性。针对这一点，Gary 为FTX开发了“交叉保证金”功能，让用户可以用多种数字资产共同为一笔交易做抵押。这一功能也在后来被其他合约交易所相继推出。
实际上，作为 SBF 成就大业的“二把手”，Gary 不仅仅只是一个优秀的程序员，他还是一个顶级的产品经理！Gary 甚至可以单独通过市场需求开发出领先竞争对手的产品。 Nishad Singh 是 FTX 的工程主管，但是更多做工程师的协调，最核心的产品经常是 Gary 一人独自开发。
与此同时，Gary 会负责 SBF 一些特殊程序的核心请求，并且只有 Gary 和 SBF 有权限使用和查看，FTX 的工程团队甚至都不知道 Gary 写的全部的程序。其中就包括 Alameda 可以从 FTX 转移资产的 “允许负余额”这一功能，这一程序让 Alameda 可以无限制地使用 FTX 客户的资金。
在 SBF 和 Gary 的领导下，FTX 做到全球交易量排名第二，市值高达 320 亿美元。 却在 2022 年 11 月，FTX 一个星期轰然倒塌，欠下超过 100 万名的债权人的超百亿美元的债务，堪称虚拟货币世界的雷曼时刻。
FTX 的核心团队全部住在一栋巴哈马的顶层公寓中， 事发时刻警察上门扣押了包括 Gary 以内所有 FTX 的核心人员。
他在 2022 年 12 月承认了包括电汇欺诈、商品欺诈和证券欺诈等所有罪行，即将面临 50 年的监禁。目前，Gary 正在寻求在法庭上合作作证以减轻判罚。
一代天才程序员 Gary Wang 也曾名噪一时，但这样锋利的一把嗜血宝刀却被用在了错误的地方，落得一个潦草收尾的结局。
贾扬清
Caffe框架的创始人，也是TensorFlow的作者之一，曾就职于Google Brain、Facebook等。


左耳朵耗子， 目前在创业： MegaEase， 主要为企业提供技术解决方案以及高可用、高并发、高性能的分布式技术产品。
耗子叔有一个访问量千万的技术博客: coolshell, 上面的文章可以说是篇篇精华，我墙裂推荐大家去看看，CSDN 经常由于访问量过大被推上首页。


耗子叔尤其擅长底层技术架构，C/C++/Java和Unix/Linux/Windows。
对高性能，高可用，分布式，高并发，大规模数据处理系统有很深入的研究。
耗子叔是一个肯下笨功夫的人，他在2001年被外包到银行做开发，
他在 2001 年那年被外包到了某银行做开发，就是用 C 语言在 AIX 系统里堆一些银行的交易逻辑，他坦言，这个过程并没有让他学到什么东西，也没有什么成长，每天想的就是要离开这个地方。
所以，他在晚上 10 点以后开始看书学习到 11 点半，并使用工作环境动手实践书上的代码，一年后，精读了《TCP/IP 详解》《Windows 核心编程》《Java 编程思想》等书。然后，找到一份外企业的工作，月薪一下翻了三倍！！！
看书一定是系统成长最快的方式，在这里顺便送大家一份我自己整理的电子书库，绝不是在网上那种打包下载的，而是自己需要学到某个方向知识的时候，需要看了，去网上挨个找的，最后汇总而成。
这部分我是会不断把它完善的，当成自己的小电子书库，不多，但贵在精。
我整理的这些书大家可以在这里下载，对于学习计算机的同学帮助非常大，且十分系统：
https://zhuanlan.zhihu.com/p/369766867
正是凭借着这股子对底层技术的持续不断的专研劲，才有了耗子叔现在的成就，并且影响了几十万做技术的人。
在谈及程序员加班、996 这个话题的时候，耗子叔说到了他在外企的经历：
在这家公司是我成长最快的时候，然而，并不是因为我的努力，而是因为有很多比我牛逼的人在 Code Review 上给我大量的帮助，在项目上帮助我，我的努力学习虽然也有作用，但更多的是高手对我的帮助。
再回想一下我以前在职场上的很多关键点，不是因为我加班了，而是因为在某些关键问题上，我跳出来解决了其它人都解决不了的问题，我解决了一个网络通信莫名其妙的断掉的问题，我把性能优化了很多倍，我解决了一个不能重现的一个困扰团队 3 个星期的问题（其实就是大家没有认真读文档），我在入职一个公司的第一天里就为这个公司解决了一个历史遗留问题。
在 Platform，我每周解决了 bug 数是全公司的其它人的总和还要多（从不加班），在路透，我带团队优化的系统的性能是全球所有研发中心最高的，在亚马逊，两周打通美国和德国的订单和商品列表系统。我也有失败的时候，而我失败的时候，总是因为我搞不定事，即便是加班拼命努力也无济于事！是的，我的职业生涯的成长，最根本的不是你有多努力，有多勤奋，而是你能搞定很多人搞不定的事！
你不信你可以看看你们公司那些不用加班，就算什么也不干，公司也要花钱养的技术人员，他们的成功一定不是努力和加班加出来的，你会发现这些人拼的不是谁干的多，而是谁解决的问题更有难度。
我加班 996 的时候，从来都不是我成长最快的时候，而我和一群牛人在解决难题的时才是我成长最快的时候。
加班996绝对不是成长的关键点，成长最快的时候往往是解决了一个个的技术难题！！！
耗子叔坦言自己绝不是高手，也不是牛人，离他们的距离还很大。只是从2003年开始在网上记录一些自己的技术知识和想法，今天还在努力学习希望能成长一个高手，因为，面对生活在今天这样技术日新月异的时代，我们每个人都是一个新人。
他很幸运出生在这个时代——第三次工业革命的时代，也很幸运选对了专业，所以，可以算是一只“风口上的猪”了，就是运气好，赶上了这个好的时代，他要唯一要做的就是不要辜负这个时代，无它。
希望我们也不要辜负这个时代！！
程序员想要远离996，首先是提升算法和基本功，不然就只能重复性搬砖，在这里也送大家一本帮助我拿到BAT 等一线大厂 offer 的算法笔记，是一位阿里大神写的，对于算法薄弱或者需要提高的同学都十分受用，算法一定是计算机学习的重中之重：
在这里也转一篇耗子叔的专访：：我的精神家园（图灵访谈）
我当时在银行做银行网络、银行的电子邮件系统和办公自动化系统。当时正处在银行信息化的阶段，加上当时互联网和IT业刚刚火起来，得到这份工作其实是很幸运的。银行正值扩张电子信息化业务的时候，其实应该有很多事可做，但是当时的主要工作都是由厂商来干。比如说IBM或Cisco拿下单子来，会把工作外包给系统集成商。作为一位技术人员，其实可以发挥的空间并不大，多数时间我只是出了问题打电话的角色。没有人会教你任何事，出了问题，就是打电话，然后按照他们的指导来完成工作。但这个还不是促使我离职的最主要原因，我离开是因为互联网和IT业的兴起让我有些心向往之，有想去看一看的冲动。我还记得当时的辞职书是这么写的：“本人对现有工作毫无兴趣，申请辞职”。处长说，“你可以这么写，但是要加上‘经调解无效’，另外，分给你的房就不能要了”。我说好啊。就这样就辞去了工作，去了上海。老实说，这个决定真不好做，因为几乎所有的朋友和亲人都很反对。
当时选择上海是有原因的，我觉得在当时的环境（2000年）下，上海的发展比较不错。没有选择深圳的原因是个人感觉那是因为政治原因凭空冒出来的一座城市，我不是很喜欢。北京我有很多同学，而我想去一个陌生的地方。但是后来发现上海也不是做技术的地方，过得有些压抑，初来到上海的时候经常会被人瞧不起，毕竟是刚刚来到大城市。
我当时感觉银行束缚了我，想看看自己可以跑多远，能发挥出多大的价值。于是决定出来闯一闯，主要就是要去经历一些应该去经历的事情，不希望老了以后会后悔年轻的时候没有去。当时IT产业的发展是一个大趋势，我感觉我必须要去一座大城市，去经历一些东西。在小地方基本没有这些机会。要学会游泳就必须要跳到水里去呛两口水，所以我就义无反顾地出来了。
我仍然记得自己拎着皮箱站在上海火车站的样子，举目无亲。原来在老家的时候觉得自己还挺厉害的，自以为不愁找不到好工作。不过事实却不是这样的。
我还记得第一次去面试时，（面试官）问了很多和C相关的问题，问了我半个小时，我一个问题都答不上来。我一直低着头，好像被审问的犯罪分子一样。我从大学毕业出来就没经历过什么面试，再加上自己内向的性格，所以，整个过程我都在低着头，不敢看别人一眼。最后，面试官问了我一个问题是“有不懂的问题你会怎么办”，这样的问题我都不敢回答，其实这道题的答案不过就是“问别人”或是“自己看书”或是“上网查资料”什么的。很显然，这场面试我肯定是被灭掉了。但这还没完，最后面试官对我说：“你出来干什么，像你这种性格根本不适合到大城市来”。
我当时被严重地打击了，感觉到自己确实有一些东西很差。第一个是性格差，不知道怎么与人交往；第二个是技术差，很多问题不知道；第三个就是视野狭窄，没见过世面。后面的几家公司的面试都大同小异。一个人在异地他乡，经历了这些事情，心里会非常地恐慌，“我这条路是不是走错了？”，我经常这样问自己。
面对这样的情况，我被逼迫着一定要改变自己。因为，离开银行时，我的家人、同学和朋友都很反对我出来，如果这样灰溜溜地回去，我面对不了他们。而前面的人还看不起我。我当时的处境真的很难堪，就像爬在悬崖中间，上不去也下不来。所以，当时只有一个想法，就是要证明自己不是那么差的人。人被逼到那个份上，活得就比较简单，哪有什么职业发展规划，只想拼命地多学技术，提高自己的能力。这个经历有点像是一剂兴奋剂，同时也相当阵痛。但是回头想想，第一个面试官应该是我最感谢的人。
在同学的帮助下我找到了在上海的第一份工作。南天公司，这是一家给银行做系统集成软件的公司，大学毕业时本来也可以进去，现在绕了一圈而且还是靠同学帮助进去的，所以那时的心态还很不平稳；另一方面因为以前是做银行的，是甲方，现在成了乙方了，两边的人都用异样的眼光看我，心态非常不好。
不过，这是个技术不错的企业，国内早期很多搞Unix/C的高手都是从这个公司培养出来的。我当时的技术还是不行，比如说到了用户站点以后，不知道怎么做，我曾经误操作把用户的数据删掉了。经常犯低级错误，不但没做好自己的工作，反而还给别人添了麻烦。这些经历都让我有一种“技术焦虑感”，或者叫“技术忧郁症”。我觉得自己这也不行，那也不行。这也是我今天仍然在拼命学习的原因。这就好像我们经常在参加工作多年后还会梦见自己的英语四级没过，或者是期末考试没过一样。我经常会梦见的是项目又做砸了，又把用户的系统搞乱了，一大堆人要审我、要训斥我。
因为技术差，沟通差，不会面试，所以，我决定经常出去面试，基本上每周都要去，不管懂不懂，也不管是什么公司，也不管别人鄙不鄙视我，反正一有机会就去面试，多见见人这样可以让我的性格有所改善，同时，也可以知道社会上需要一些什么样的技能，把别人面我回答不上来的东西都记下来，然后回头找答案。那个时候我会经常去上海书城看书，看很多很多的书。我学的东西很杂，什么做网页，Windows，Unix，Java，.NET，flash，连3DMax/Photoshop我也学，还去考CCNA的认证等等。这样散乱地学习两年后，我才慢慢确定了要走C/C++/Unix/Windows系统底层的路子。而这样扑天盖地学习的结果有一个好处就是，我成长的速度相当之快。我自己摸索到了适合我的学习方法（从基础和原理上学习），从而不再害怕各种新的技术。那时，所有人都在休黄金周出去玩的时候，我还呆在办公室或住处看书学习。
等到一年半之后，用句赵本山的台词说，我在面试中学会抢答了。面试官的问题没问完，我就能说出答案了。其实，基本上是面一个公司过一个（当然都是一些小公司），此时，我就开始挑公司了。
感到技术能力不行就去学技术，交往能力不行我就去面试，这两个问题都可以通过大量地实践和努力来弥补，但是眼界这个东西没有办法通过努力来弥补。所以，当时非常想去一些更大的公司看看，如果能去外企更好。
我还记得，有一天，有一个和网络相关的技术问题，同事们搞了三四个通宵，也没弄明白，后来想起我好像在看这方面的书，他们就让我去看看、试试，结果我只用了20分钟就搞定了。基础真的很重要，这受益于我看了《TCP/IP详解》这套书。
后来，我去了一家做电信软件的公司，他们让我做PowerBuilder，尽管我当时想做的是C++，但是因为当时各种原因很需要这份工作，就去了。进了那里的第一天发现公司里有一个论坛，上面都是一些技术上悬而未决的问题，都是关于Windows/C++的。我一看，都是些很简单的问题，一下午的时间就被我全部解决掉了，我的基础知识发挥了作用。于是，当天下午我一下子就被调到了核心组。不过，我只在那里呆了两个多月，因为那时我已经不愁找工作了，这期间有两家北京的公司录用了我，于是，02年我就来到了北京，去到一家做分布式计算平台软件的公司。
在上海的这两年的时间，从什么都不是，到得到工作上的全面肯定。那段时间感觉自己牛得不得了，有些狂妄和骄傲了，经常上网和不认识的人争论一些很傻的问题，后来发展到对当时的领导以及银行客户的领导不敬，总觉得这些人太二。现在回头看过去，我觉得那是我人生特定时期的记号，人生的痕迹。
我2002年在CSDN开了一个blog，当时叫专家专栏。开个专栏很简单，只要发6个帖子。我也不是什么专家，只是喜欢看书、喜欢学习而已，也喜欢做一些学习笔记。那时候没有笔记本也没有台式机，市面上好像也没有U盘和移动硬盘。正好有CSDN这么一个地方，就去CSDN的站点上把自己的一些学习笔记放在了上面。后来03年的时候技术专栏转到了博客，因为CSDN对其博客经营得不好，我09年就离开了csdn，创建了酷壳。花了4500块钱，租了一个server。我离开那里主要有两个原因，一个是因为当时CSDN博客有一些性能上的问题，.NET架构嘛，大家都懂的。另外一个原因就是当时出现了很多博客营销的站点，有点像今天的36氪。好像那时候出现最早的叫煎蛋，那上面会有一些报纸上不会出现的国外的趣闻，是以博客的方式形成的媒体。这和常规的以日记形式出现的博客大不一样。煎蛋、有意思吧等这些博客让我看到了博客还能这样写，我觉得很好玩儿。而我当时也经常会去国外社区看一些文章，也能看到一些有意思的东西（因为我当时有了学习瓶颈，国内的网站已经满足不了我了）。心想，既然这些东西这么有意思，我为什么不自己开一个博客呢？
我老婆是学新闻编辑的，她鄙视我说，你的博客虽然有很多人读，但是只能算是个书呆子的博客，全是一些书呆子式的文章。我有些不服，我觉得技术人员不全是书呆子，我们这个圈子里也有很多有趣的东西，只不过是你不知道而已。于是我想弄一个有意思的、有娱乐性质的东西，里面都是技术圈里面有意思的事儿，但是很多技术圈以外的人也能看懂。一开始酷壳和CSDN博客的风格完全迥然，如果有技术性的文章我还会在CSDN上贴，但是后来我就完全抛弃了原来CSDN上的博客。酷壳的初衷是希望很多人都可以来上面发表一些东西，但是可能是我写得太多了，别人就被压制住了。
现在博客更新频率是一周一篇，一开始的时候一周三篇。磨刀不误砍柴工，总是有时间来做这些事的。我经常看书，需要把学到的东西整理成学习笔记。自从在CSDN上写博客的时候，就有这样的习惯了，而且又有“技术焦虑症”，害怕跟不上，所以维护博客的事对我来说是很自然的。
现在我已经不用自己再租服务器了，由于酷壳的访问量比较有保证，我提供了广告位，就免费得到服务器了。
遇到新技术我会去了解，但不会把很大的精力放在这。这些技术尚不成熟，我只需要跟得住就可以了。我的团队自己想学什么我都不干涉，但是用到项目里的技术，必须是很成熟的，（技术应用）十年以上可能是一个门槛。有人说技术更新换代很快，我一点儿都不这样想。虽然有不成熟的技术不断地涌出，但是成熟的技术，比如Unix，40多年，C，40多年，C++，30多年，Java也有将近20年了……，所以，技术并不多啊。还有很多技术比如Ruby，Lisp这样的，它们没有进入主流的原因主要是缺少企业级的应用背景。
如果要捋一个脉络下来，70年代Unix的出现，是软件发展方面的一个里程碑，那个时期的C语言，也是语言方面的里程碑。当时所有的项目都在Unix/C上，全世界人都在用这两样东西写软件。Linux跟随的是Unix，Windows下的开发也是C。这时候出现的C++很自然就被大家接受了，企业级的系统很自然就会迁移到这上面，C++虽然接过了C的接力棒，但是它的问题是它没有一个企业方面的架构，否则也不会有今天的Java。C++和C非常接近，它只不过是C的一个扩展，长年没有一个企业架构的框架。而Java出现之后，IBM把企业架构这部分的需求接了过来，J2EE的出现让C/C++捉襟见肘了，后面还有了.NET，但可惜的是这只局限在Windows平台上。这些就是企业级软件方面语言层面这条线上的技术主干。
另外一条脉络就是互联网方面的（HTML/CSS/JS/LAMP…）。这条脉络和上述的那条C/C++/Java的我都没有放，作为一个有技术忧虑症的人，这两条软件开发的主线一定不能放弃。无论是应用还是学术，我都会看，知识不愁多。何必搞应用的和搞学术的分开阵营，互相看不起呢？都是知识，学就好了。
技术的发展要根植于历史，而不是未来。不要和我描述这个技术的未来会多么美好，用这个技术可以实现什么花哨的东西。很多常青的技术都是承前的。所以说“某某（技术）要火”这样的话是没有意义的，等它火了、应用多了咱们再说嘛。有些人说不学C/C++也是没有问题的，我对此的回应是：如果连主干都可以不学的话，还有什么其他的好学呢？极端一点，我要这么说：这些是计算机发展的根、脉络、祖师爷，这样的东西怎么可以不学呢？大部分学校虽然都会教授C，但是教得都不好。学校喜欢教微软的东西，老师好教学生好学。我不是说Windows不好，但那不是计算机文化的主干，那只是微软的主干、PC的主干。整个计算机文化的主干肯定是源起于Unix/C这条线上（注意，我说的是文化不是技术）。我也写过很多与Unix文化相关的文章，大家可以看看我写的“Unix传奇”。
学校教的大部分都是知识密集型的技术，但是社会上的企业大部分都是劳动密集型的。什么是劳动密集型的企业呢？麦当劳炸薯条就是劳动密集型的工作，用不到学校教授的那些知识。如果有一天你不炸薯条了，而要去做更大更专业的东西，学校里的知识就会派上用场。有人说一个语言、一个技术，能解决问题能用就行了，我不这样认为。我觉得你应该至少要知道这些演变和进化的过程。而如果你要解决一些业务和技术难题，就需要抓住某种技术很深入地学习，当成艺术一样来学习。
我在“软件开发‘三重门’”里说过，第一重门是业务功能，在这重门里，的确是会编程就可以了；第二重门是业务性能，在这一重门里，技术的基础就很管用了，比如：操作系统的文件管理，进程调度，内存管理，网络的七层模型，TCP/UDP的协议，语言用法、编译和类库的实现，数据结构，算法等等就非常关键了；第三重门是业务智能，在这一重门里，你会发现很多东西都很学院派了，比如，搜索算法，推荐算法，预测，统计，机器学习，图像识别，分布式架构和算法等等，你需要读很多计算机学院派的论文。
总之，这主要看你职业生涯的背景了，如果你整天被当作劳动力来使用，你用到的技术就比较浅，比较实用，但是如果你做一些知识密集型的工作，你就需要用心来搞搞研究，就会发现你需要理论上的知识。比如说，我之前做过的跨国库存调配，需要知道最短路径的算法，而我现在在亚马逊做的库存预测系统，数据挖掘的那些东西都需要很强的数学建模、算法、数据挖掘的功底。
我觉得真正的高手都来自知识密集型的学院派。他们更强的是，可以把那些理论的基础知识应用到现在的业务上来。但很可惜，我们国内今天的教育并没有很好地把那些学院派的理论知识和现实的业务问题很好地结合起来。比如说一些哈希表或二叉树的数据结构，如果我们的学校在讲述这些知识的时候能够结合实际的业务问题，效果会非常不错，比如：设计一个IP地址和地理位置的查询系统，设计一个分布式的NoSQL的数据库，或是设计一个地理位置的检索应用等等。在学习操作系统的时候，如果老师可以带学生做一个手机或嵌入式操作系统，或是研究一下Unix System V或是Linux的源码的话，会更有意思。在学习网络知识的时候，能带学生重点学一下以太网和TCP/IP的特性，并调优，或是能做一个网络上的Pub/Sub消息系统或是做一个像Nginx一样的web server，那会更好。如果在学图形学的过程中能带领学生实践开发一个作图工具或是一个游戏引擎，那会更有意思。
总之，我们的教育和现实脱节太严重了，教的东西无论是在技术还是在实践上都严重落后和脱节，没有通过实际的业务或技术问题来教学生那些理论知识，这是一个失败。
中国人中庸的思想，入世和出世，每天的工作就是入世。举个例子，在上海的时候，给交通银行做项目的时候，每周休息一天，早九点到晚十点，每天工作12个小时，这样的工作持续了一整年，没有节假日，项目上的技术也没什么意思。当时我晚上十点回到住处，还想学一些C++/Java和Unix/Windows的技术，于是就看书到晚上11:30，每天如此，一年下来学到很多东西，时间没有荒废，心里就很开心。我觉得当时是快乐的，因为有成长的感觉是快乐的。
现在的我，工作、写博客、养孩子，事情其实更多。我早上7:30起床，会浏览一下国外的新闻，hacker news，tech church，reddit，highavailability之类的站点，9点上班。晚上6、7点钟下班，开始带孩子。十点钟孩子睡了觉，我会开始重新细读一下这一天都发生了些什么事情。这个时间也有可能会用来看书。学习的过程我是不喜欢被打断的，所以从十点到十二点，家人都睡了，这正是我连续学习的好时间。可能从晚上11:30开始，我会做点笔记或者写博客。我现在对酷壳文章的质量要求比较高一些，所以大概积累一个星期的时间才可以生成一篇文章。每天我大概都在一两点钟才会睡觉。没办法，我有技术焦虑症。但是觉得这样的生活很充实，也很踏实。
另外，任何一门技术玩深了，都是很有意思的。有些人形成了一个价值取向，“我只做什么，绝不做什么”。前段时间有一个刚来亚马逊的工程师，他原来做的是数据挖掘推荐系统，后来公司重组要他做前端，他不肯。我觉得，前端后端都是编程，Javascript是编程，C++也是编程。编程不在于你用什么语言去coding，而是你组织程序、设计软件的能力，只要你上升到脑力劳动上来，用什么都一样，技术无贵贱就是这个意思。
回到问题，怎么才能享受到快乐呢？第一，入世和出世要分开，不要让世俗的东西打扰到你的内心世界，你的情绪不应该为别人所控，也不应该被世俗所污染，活得真实，你才会快乐。第二点就是要有热情，有了热情，你的心情就会很好，加班都可以是快乐的，想一想我们整个通宵用来打游戏的时光，虽然很累，但是你也很开心，这都是因为有了热情的缘故。
我承认我活在我的精神家园里面。我推荐大家看一下王小波的《我的精神家园》，这篇文章对我的影响非常大。看了这篇文章，你就会明白我为什么要躺在自己的池子里，如果不想被这个社会所污染，就必须要躺在自己的池子里。做大众是很容易的，做自己是最难的。当你老了的时候，回想过去，如果你是为自己而活的，你总会觉得很踏实。可能有人会觉得我偏激，没关系，为什么要所有人看法都一致呢？世界因为不同而美丽，多元化的价值观并不冲突。
最后送大家一份自己整理的电子书库，绝不是在网上那种打包下载的，而是自己需要学到某个方向知识的时候，需要看了，去网上挨个找的，最后汇总而成。
汇集了编程语言(Java、C++、C、Python等等)、操作系统、计算机网络、系统架构、设计模式、程序员数学、测试、中间件 、前端开发、后台开发、网络编程、Linux使用及内核、数据库、Redis....等主流的编程学习书籍。
这部分我是会不断把它完善的，当成自己的小电子书库，不多，但贵在精。
我整理的这些书大家可以在这里获取，对于学习计算机的同学帮助非常大，且十分系统：
书单：
希望大家都能在编码的路上下笨功夫！！！远离996！，记得帮我 @编程指北 点个赞哟~
最后给大家分享一下计算机学习路线大全，很多同学照着这个路线学习进了拿到大厂offer
"
被公司卸磨杀驴能把代码删除吗？,"删除代码违法，但删除代码的注释不违法。
删除代码违法，但使用奇怪的函数名不违法。
删除代码违法，但调用乱七八糟的库不违法。
删除代码违法，但加入无用的代码不违法。

驴要明白一个道理，被卸磨杀驴后，你把面粉毁了，那买下一头驴重新磨一遍就行了。
但是你往面粉里加点脚皮屑，让老板吃，每次他吃的怪怪的，总觉得有问题，又不舍得扔了，然后一直吃。那才是最高效的报复。


想反抗又不敢反抗的时候
可以试着加倍努力干烂活，撸起袖子加油干.....烂活
态度一定要端正，水平一定要稀烂
——
我当年实习的时候，领导敢7点之后打我电话，我就敢10点打回去向他请示
他敢10点给我打电话，我就凌晨1点给他回

删除代码你什么也得不到，除了泄愤外屁用没有
不如在代码里埋点雷，最后还得请你回来修，要么就花大价钱重构

注释里面可以下毒，原则就是把注释写的没有参考价值，可以不按照代码实际功能来写注释，或者把注释里的参数名称调换一下，最好再夹杂大量正确的废话，增加阅读难度
活用变量闭包，闭包内外变量名称尽可能用一样的，这样整个代码就会看起来逻辑极其混乱难以分析，配合注释下毒就算尤雨溪来了都得琢磨半天
大量使用语法糖和各种简略写法，比如六七个箭头函数裹在一行里
高耦合低内聚，逼着别人必须极其谨慎的处理你的屎山
内存能不回收就不回收了，等着它内存泄漏
不写输入参数检查，只要调接口的时候参数有任何一点不对，马上崩就完事了
把关键逻辑写成一个开源库再引用的办法，引用版本号一定要写latest，离职后自己把开源库release一个会炸的新版本，等下次依赖自动升级就直接全炸

总之尽可能把你的代码写成一坨粘稠的屎山，这远比直接删代码来的更能恶心人

首先，屎山，bug，是合法的
代码写的差是合法的
代码中引用一个你自己的库(一般情况下)是合法的
写的代码先不提交是合法的
git合并时删掉一些代码也是合法的(合并代码又冲突嘛)
写代码不考虑特殊情况也是合法的
sql不防注入是合法的
域名解析源站ip是合法的
漏洞不修是合法的
多用点停止支持的库是合法的
多写点报错自动退出是合法的，什么参数错误管他什么直接报错
判断写严格点是合法的，发现问题立刻报错而且不输出问题
不写注释是合法的
什么？公司用的是1.8的jdk？没关系，用最新的jdk是合法的，直接把编译完成的代码传上去
突然又想到一个：写前端的兄弟们，用webpack来格式化代码如何～
但你恶意删代码
1.(可能)没有效果，gitsvn直接恢复
2.如果删掉无法恢复那等着公司法务吧，违法的

兄弟们评论区不看后悔一辈子

卧槽，你们都要埋雷给公司造成损失吗？
我当年正常写就行。

十几年前我接私活，帮别人实施一个政务软件项目，合作方老板承诺1万的好处费。
当时环境是Windows Server，我开了远程权限，写了脚本放在计划任务里，预防对方付款上磨磨唧唧。
后来担心的事情还是发生了。
我遂告知对方删除map（map及坐标数据是我私人提供的，没备份的话删了就彻底没有了）、删除应用程序以及格式化系统os的时间计划安排。
双方电话里相谈甚欢，互相给予对方温暖问候之后，我爽快的拿到了一张中行的支票。



劝开公司的，对各种技术人员好一点，
如果你用maya，这两年估计你遇到过，
有一个病毒，中招就会现实这个：
程序员要是泄愤，删代码并不是好主意，
在代码中加东西才是好方法。

接过一个项目
功能很简单，但是防破解的功能我搞了一个星期
然后给对方，每次操作软件会跳出框框说免费试用15天
15天内未输入注册码的话保持调度通讯功能，但不能操作设备；
不到3天就马上打款了

不能，这样犯法。
但是代码质量不过关是可以的。
你品你细品。

删代码涉及到违法， 可能会被抓去啃窝窝头，得不偿失。
但是在项目里面“一不小心”留几个暗坑，或者因为“技术菜”留下大坨小坨的“屎”，相信大家都是可以理解的。

真是没想到，我居然被卸磨杀驴了。入职一家公司，转正不到一个月， 帮他们把框架搭建的差不多了，然后就没我什么事了。
这操蛋的，早知道这样应该在框架里面""拉屎""的！
一年后更。
现在没啥事，就来说说这件事。这公司估计就是招我进去帮忙搭建系统框架的，框架搭建的差不多了，卡着我工作还没满半年的时间节点把我辞退了，很爽快的给2N，谈判过程不超过5分钟。他们很清楚，我也心知肚明。
过了一两个月吧，这家公司的技术人员联系我，说框架有问题，他们实在是搞不定，希望我帮帮忙，我找了个借口敷衍过去了，没理。
随后又找我好几次，说顶不住上面的压力了，再搞不定他也要走人了。我心软了，指点了几句，告诉他解决思路。
这个问题呢，其实我是知道的(当然不是我故意埋雷的)，只不过当时忙着完善日志收集和监控系统，那个问题想着放一放，后面再抽时间解决的。
只是他们太着急了，还没完全搞完，就图穷匕见了。

抗战的时候，游击队剪电话线的时候，剪断的时候还得再给它“接”起来，让外表看不出来。

额。核心层用C++写的。大佬告诉我，不要用指针。然后我就把指针的星号都藏了起来…为了效率，也为了懒省事，数据交换经常用数组越界溢出的方法。全局变量和局部变量连续混用。除了我自己，别人谁都看不懂。。看懂了也不敢动。尤其是各种溢出，据我师弟说那些代码基本上都是鬼见愁的。。。

我打的人生第一份工，就被老板卸磨杀驴了。
我的报复是：我在中午没人的时候，把干活的三台电脑都下载了一个东西，这个东西很神奇，只要一关机，就会重启，然后进入DOS系统格式化非系统盘外的所有硬盘，而且是悄摸摸的，显示器上给你显示的是在检查硬盘错误，让你别动。
公司是个广告公司，当时所有的资料都保存在那三台电脑里。
这是2001年的事儿了。
没有人怀疑是我干的。因为上午的时候断了一次电，3台电脑都非正常关机了，他们都认为是断电导致的硬盘损坏。

学学Twitter的程序员，被裁掉又被马斯克请回来




删掉干嘛？不如“加点啥”。删是一种破坏性行为，是对公司财富的侵害。而“加”是正常的工作行为，拿工资就是做这个的。

某个前东家有一段代码，在各种机缘巧合之下，是我直接在生产环境一气呵成写完的，除我以外没人敢动，离职六年后还有人打电话过来问我细节。
真是……太高看我了，写完不到一个月我基本就忘光了

千万不要这么干

"
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
Bug是如何产生的？,"项目：学校里的一次月考。
程序：确保学生规范答题并交卷，返回学生的分数。
教务处开始提需求：要考语文和数学，高一高二高三分开来考，根据教材出题……
考务处开始写程序：要出这些题目，给学生分配考号，派监考老师防作弊……
普通用户行为：填写自己的唯一标识符(考号)，然后答题，交卷(上传)……
爬虫：张三一天之内补考了1024次，把题库记的一清二楚。
身份验证漏洞：李四填了王五的考号替考。
DDos攻击：王六克隆了王七、王八、王九……王一〇二四把考场挤的水泄不通。
兼容问题：选择题只能用2B铅笔涂，老王用中性笔涂卡结果无法识别。
社工攻击：小明请校长喝酒，要到了试卷原题。
网络丢包：老师收卷时滑倒，试卷飞出去找不到了
性能问题：老师需要3天的时间改试卷，这3天响应速度很慢。
木马攻击：小红帮助老师改卷，实则悄悄把自己的成绩改成了100。
逻辑bug：“春眠不觉晓，_____。”既可以填“处处闻啼鸟”，也可以填“处处闻啼鸟。夜来风雨声，花落知多少”。
热更新：教务主任走进考场，告诉同学们“春眠不觉晓”后面只能写五个汉字，否则不给分。
抛出异常：改卷时发现学生字迹太丑无法识别。
异常捕获：规定看不清的字迹返回0分。


领导：修个房子。
程序员：好的，马上开始打地基！
领导：你看那隔壁那木房子就没有打地基，不要在小事上浪费时间，一个月水平面上面什么都看不到，你kpi不要了？
这是敏捷开发。


一层房子修好。
领导：我觉得两层楼的视野好，再加一层。
程序员：可是我们没有地基，重新打地基要时间……
领导：你一楼都修好了，照着再修个一模一样二楼很难？还要很多时间？
这是高速版本迭代。

二楼修好。
领导：天天走路累死了，你再修个电梯。
程序员：可是……
领导：没什么可是的，地基不稳？就在房子边上搭个电梯就行了嘛，不稳拿根木棍撑一下，这都不懂？
这是版本优化。


电梯修好。
领导：我觉得顶楼再加个游泳池就好了。
程序员：这个结构行业翘楚的房子也不支持呀！
领导：那不正显得我们牛逼么？修快点，夏天要来了。
这是快速功能追加。



游泳池修好，看着摇摇欲坠的房子，程序员跑路了，领导找来新人继续。
领导：我觉得游泳池水不够满，你加点的，一楼光线不好你在墙上打个窗户。
新人：好的，没问题领导，马上加一桶水，马上砸墙
这是打补丁。

房子塌了，电梯倒了，游泳池垮了……
领导：真是个废物，就让他加桶水，居然能把房子弄倒了，你说这是多没用？
新人：我真的就加了桶水，我怎么知道为什么。
这是软件莫名崩溃。

老婆给当程序员的老公打电话：“下班顺路买一斤包子带回来，如果看到卖西瓜的，就买一个。”
当晚，程序员老公手捧一个包子进了家门……
老婆怒道：“你怎么就买了一个包子？！”
老公答曰：“因为看到了卖西瓜的。

bug产生于人力有时穷。
知乎上看到的段子，但我不记得是在哪个答案了。。侵删：
一万个测试工程师在酒吧门外呼啸而过
一个测试工程师走进一家酒吧，什么也没要
一个测试工程师走进一家酒吧，要了一杯啤酒
一个测试工程师走进一家酒吧，要了一杯咖啡
一个测试工程师走进一家酒吧，要了0.7杯啤酒
一个测试工程师走进一家酒吧，要了NaN杯Null
一个测试工程师走进一家酒吧，要了2^32杯啤酒
一个测试工程师走进一家酒吧，要了一杯烫烫烫的锟斤拷
一个测试工程师走进一家酒吧，要了一份asdfQwer@24dg!&*(@
一个测试工程师化装成老板走进一家酒吧，要了500杯啤酒并且不付钱
1T测试工程师冲进一家酒吧，要了500T啤酒咖啡洗脚水野猫狼牙棒奶茶
一个测试工程师走进一家酒吧，又走出去又从窗户进来又从后门出去从下水道钻进来
一个测试工程师走进一家酒吧，又走出去又进来又出去又进来又出去，最后在外面把老板打了一顿

测试工程师们满意地离开了酒吧。
然后一名顾客点了一份炒饭，酒吧炸了。。




我以前玩过一款游戏，叫做永恒之塔。
里面有个巨大的BUG.
在新手村打怪，一只怪最多掉5块钱。组队平分，每人1块。
但组队可以组满6个人。
于是当你组满6个人打一只怪的时候，这5块钱就不够分了。因为1是货币的最小单位。于是惊悚的事情就出现了。系统开始每人几十万，几百万的分。这个BUG就是个逻辑错误。
最后，因为刷钱被封号了。

"
有哪些让你目瞪口呆的 Bug ？,"关于考勤打卡的
我们单位粗心的人事在系统里删除离职人员的时候不小心把我也删除了
当了很长时间的黑户
后来虽然又添加回来
但饭卡，慰问品之类的总是出错，每次我都得解释一遍然后气急败坏的自己去单独领一份
直到我发现
我请假系统里不扣年假
哈哈哈哈哈哈哈
无限续杯

想起来以前有一年教大班，教到交通规则，红灯停绿灯行。
班里有个小孩，总是记成红灯行绿灯停。
一开始以为是故意的，后来发现不是，就算今天让他记住了红灯停绿灯行，明天他又会告诉你是红灯行绿灯停。
又以为是不是色盲，但是他是分得清红绿的。
我和主班老师都觉得很奇怪，别的小孩都能教会，这小孩虽然平时死板固执了点，也不至于都教不会一个红灯停绿灯行吧。
然后主班老师就问他，你爸爸妈妈带你上幼儿园，带你回家，过马路的时候，是红灯走还是绿灯走呀？
他:我爸爸妈妈一直都是红灯走的。
我:6
主班老师放学的时候还隐晦地提醒了小孩妈妈，说载小孩的话最好还是遵守交通规则，为了安全考虑也为了给小孩做个好榜样。
他妈妈:有啊有啊我很遵守规则的！
但是那小孩还是记不住，而且第二天问他，他妈妈还是红灯走的。
做老师的也不能过多干涉家长的习惯，我们也就没有再说什么。
后来有一天，我骑电瓶车载我闺蜜出去玩，到十字路口的时候，她说旁边的车都走了我咋不走。我没好气跟她说你看不到红灯嘛，没车也不能闯红灯！
她说我看不到！你这么大只挡在前面我怎么看得到！
然后我突然意识到，我班里那小孩，他爸爸妈妈是用自行车载他的，他坐在后座，确实是看不到正前方的红绿灯。他只能看到左右的红绿灯。
所以当他正前方是红灯，左右就是绿灯，他就会以为他看到绿灯就得停着。
当他正前方是绿灯，左右就是红灯，他就会以为，他看到红灯就代表可以通行。
我不喜欢跟家长沟通，所以我把这个想法跟主班老师说，叫她去跟家长说。他妈妈听完也是恍然大悟，带着他走了一次十字路口，跟他说明白了红绿灯得看自己正前方的。
最后这个困扰我俩大半个学期的bug就这么解决了。

魅族手机把sim卡名称改成“无sim卡”
系统就会以为真的没有这张卡 直接断服务 且整张卡选项变为灰色 无法进行更改 重启也不行
解决办法是把系统语言改成英文 因为这样会识别到卡名字叫做“无sim卡”而不是真的没有sim卡

一个老爷子卖酸奶
三块一瓶，十块三瓶
来个小伙子
“大爷，来瓶酸奶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷，再来一瓶！”
“三块！”
“大爷你看，我买了三瓶酸奶，才九块钱，所以你那个‘十块三瓶’算错了，买的越多应该越便宜才对！”
“呵呵，每天都有你这样的来一下买三瓶！”

有，不过是店员目瞪口呆，而我稳如老狗。
06年时候在福州，华莱士汉堡三个10元，两个7元，一个4.5元。
有次晚上请同学去吃，我说先来四个汉堡。
店员，“四个汉堡，14.5元。”
我，“不是14吗？”
店员，“三个10元，加一个4.5元，是14.5元啊。”
我摆摆手，“不要三个加一个，我要两个，加两个。”
店员，………………
好了，可以点其他的了。
"
将 bug 译作「蚆蛒」，将 debug 译作「揥蚆蛒」，音译兼意译，是不是很巧妙？,"翻译得挺好
这仨字光看着就能感受到一股腥膻咸湿的克苏鲁气息，很是能准确复现debug时的精神状态
下次别翻译了

阁下不会就是翻译出
的那位姐吧。

————更新，应要求添加一下这些词的解释：
鲁棒性：robustness，robust意味健壮，强壮，应该译为健壮性，稳健性，强壮性，稳定性均可，译者不知何故要音译，由于词汇太过古早，也可能是译者当时不懂这个词的含义，总之结果导致其在国内教材中广泛使用，造成了大量学生的迷惑。
诱导公式：原文是reduction formula，即简化公式，译者翻译的时候可能用的是盗版书，国内标注的是induction formula，也可能是记错了单词的意思，因为其把reduction（减少）当作induction（归纳）来翻译，但最终的译文甚至没有体现出induction的意思，也就是说经过了两次错译才最终变成了“诱导公式”这个不明所以的名字，并且被我国高中教材广泛使用，以及各种教辅，培训班强行解释“诱导”的意思，导致越传越广。
半条命：应为半衰期。
老头滚动条：应为上古卷轴。
车厘子：cherry就是樱桃，译者非要音译出另一个物种来。
红地厘蛇果：delicious apple就是苹果，译者非要把delicious音译为地厘蛇，再加上红字，听起来像是“红地”这个地方的物种“厘蛇果”。
泰晤士报：原文是“The Times”。并没有“泰晤士（Thames）”这个发音，不仅丢失原义，还让人对该报纸的发行地产生误解。
巴勒斯坦：应为巴勒斯丁，见答主“知乎用户ObE5mQ”的回答：
套套逻辑：tautology，原义“同义反复”，纯音译导致的怪异翻译。
套接字：Socket，原义插座，接口。
方程式赛车：见用户“西瓜回路遮断器”的评论：formula使用了错误的意义。
把属性映射为属性：把property映射为attribute，译者（可能是机器）翻译时没有考虑其意义。
双亲委派机制：parent delegation，应为父类代理，当然，对于某些用户，非要译作母类代理我也没有意见，译为“双”会让人误解程序的继承关系。
酉矩阵，秩：Unitary Matrix，Unitary即单一的，被译作“酉”，中文意义看起来像是指十，鸡，很多，或者两年半。rank即排，列，被译作“秩”。
卡宾，氮宾，叶立德：见知乎用户SZnCu的回答：
缺省：默认值，原文default，不知道为什么要翻译出“缺省”，同时失去了缺少，默认两个意思。
渠化：见用户庆晓筱的回答：
死投：
Dead Drop，标准译法：固定情报投放点。见用户黄金大亨的回答

蚆蛒：原文bug，译作“蚆蛒”，一晃眼还以为是浏览器没安装UTF-8出乱码了。

我觉得不如叫 涤悖格
涤 洗涤，去掉
悖 不合理，冲突，错误
格 格式，标准，规范，结构段落
悖格 谐音bug，导致错误，冲突或不合理的代码结构。

我觉得比你编的那个更加复合翻译的三要素，信达雅。

我觉得不巧妙。
因为你这样文字太多了，文字笔画太多就不好写了。
可以简化一下。
例如bug，音是：八各。
为了简化，可以把“各”简化成为“𠂊”，八字没必要简化了，就两笔。
为了区分汉子和翻译，咱们可以把这部分文字增加角标。
最终成品：bug→バグ


挺不错的，一眼就有种字符集出错的感觉
"
王小波的计算机水平有多好？,"以下文字都是我本人写的。为了让阅读方便，减少模糊性。我在文中以第三人视角描述。 而不用“我舅舅“，”我姥姥“，”我大舅舅“，”我小舅舅“之类的称呼。 这是一个十几年软件工程师的习惯而已。
我舅舅是王小波。我是个禁不住人肉的老百姓。资质平庸。 王小波一篇《我是怎样做青年思想工作》的杂文在我青年单身适龄的年代，给我个人做了最大程度的广告。算是他老人家留给我最宝贵的遗产之一。 除此之外，还有他那台用了很久的PC，在他去世前一年送了我。
他是汇编高手。自己用汇编写了DOS下的汉字输入法。输入法有个功能，可以加4声。 一般拼音输入法没有这功能。这需要普通话读音正确的使用者。90年代总共也没几种汉字输入法。看过他用自己输入法打汉字。速度几乎和盲打英文一样。那时候我大学，正在疯狂苦练吉他。并没有弄懂他用了何种技术。虽然我从小学也用Z80和APPLE II 做些机器码编程做游戏。但到了中学为了高考，计算机就荒废了。
他人生最后几年，WINDOWS 3.2开始普及。然后是WIN95。 他开始从DOS转向WIN32 SDK编程。最终非常任性地熬夜苦干了很长时间，把输入法转为WIN32 SDK 在WINDOWS下正常工作。当时WINDOWS已经有不少汉字输入法。 尤其到了WIN95时代。 他这么做也只是出于兴趣而不是在DOS时代的必须。就WIN32 SDK我们还讨论过一些。那时候win32 sdk真的是很难用。主要是互联网还没有（我是96年后用上的），资料很少。匈牙利命名法陌生。WIN32的体系和DOS大相径庭。全部都很陌生。而且完全抛弃了DOS那套东西。所有90年代DOS底层程序员向WIN32的迁徙都是一部血泪史。
他人生最后一年，多媒体开始普及。光驱，声卡，2D加速卡普及。95-96年他开始和我合计做多媒体出版。原因现在想起来很悲伤 ------ 他的书很难在大陆出版 。 他不得不想办法让他的作品能够让更多人看见。而平时维持生计，只能忍着严重的痔疮，每日给各种杂志写杂文稿件。 多媒体的兴起，让他感觉也许可以利用他的技术优势，自行制作电子出版物。配上插图，音乐，用电子书籍方式可以让自己作品为大众所见。他给我看了已经制作了一部分的DEMO。就和现在用Micromedia多媒体制作软件制作的电子多媒体制品很像。电子书内容是黄金时代。有图案的背景。按空格可以翻页。同时有音乐。好像偶尔还会有一点动画的特效（我记不清了） 。但当时的DEMO完全是他自己用WIN32写的EXE 可执行程序。 他那是从WIN32 SDK移植输入法时，基本掌握了消息处理，GDI，窗口控制等方法。还有一些底层的TRICK。
我大学后和王小波比较近。那几年每周末都在他母亲家相聚。他母亲5个儿女，只有他1个人在国内。于是他就经常住在母亲家，怕老人一个人，是个大孝子。母亲家旁边有个筒子楼里2间房的小屋，公共厕所和水房，冬天暖气烧得极热。偶尔我会和他住一块。里屋是他的生活起居和写作桌。外屋很小只有张床。他弟弟的孩子和我偶然会睡外屋。印象最深的就是他烧普洱茶的电炉和玻璃茶壶。里面总是有极浓的茶水，下面沉淀着大量茶叶。估计熬夜就靠那个。
目睹了他后半截人生（从我记事起到他去世，中间他出国很多年）。感慨很多。王小波有个八叔，当时双手打算盘，无比聪明是个天才。年少夭折。王小波父亲因为搞逻辑学，引起毛泽东注意，被毛接见聊了一下逻辑学的学术相关问题。69岁心脏病发独自倒在家中过世。王小波去世方式和他父亲一模一样。区别仅在更加年轻。王小波哥哥在受文革影响挖了10年煤。后来去美国博士念数理逻辑，解决了一个100多年未解的数理逻辑问题。最后的博士毕业论文自己系的教授搞不定，专门找了数学系的教授来看。毕业后他哥哥因为被文革耽误岁数太大。没有继续科研工作。
我的最大感慨是，留得青山在，不怕没柴烧。天才也好，资质普通如我也好，人都只有一个人生。王小波妈妈去年92岁，10月刚去世，白发人送走了自己两个儿子，又过了十几年才走。之前得过癌症，靠自己毅力锻炼，恢复了。王小波去世后一年，王小波弟弟又突然去世。当时孩子都没敢告诉老人。老太太感觉不对，但又无法得知真相。只是和我说她的疑心。当时国内只有我一人，只能瞒着。不停劝慰老人没事。老太太喃喃说，“除死无大事，除死无大事啊” 。
除死无大事。 人生在世，碰到什么坎，都只会是你人生中一个普通的节点。时间一长，什么都会成为过眼云烟。 留份宽心，也许这样导致目标感没有强到能和社会精英逐鹿。但只要有耐心，不怕挫折，假以时日，目标总会实现的。作为一个42岁还在以玩游戏看动漫为生活主体的大叔，保持健康和有活力地追求智慧和有趣，做自己热爱的工作，保持善良，做精神自由的人，是我从王小波的人生学到最重要的东西。希望每个喜欢王小波的人，都有自己充实和健康的身体和精神。

这个月有两个人被拿出来隆重纪念，都是早就计划好的。
一个是张国荣，一个是王小波。
你得承认不少人是在张国荣自杀之后才听说并喜欢上这个“哥哥”，王小波也一样，97年他死得很突然，名声也在身后突然爆炸了起来。
1994年，王小波的《黄金时代》终于在大陆出版了，华夏出版社搞了一个研讨会，一共只有20多个人参加，李银河亲自上阵做了会议记录。
1994年也是中国互联网元年，中科院高能物理所第一个接入了互联网，丁磊从同学那里借来了一个账号登上了yahoo，张朝阳从MIT回国，王志东创办四通利方，马云创办海博翻译社并在美国第一次看到了互联网，张小龙也是那一年毕业直接辞掉了电信局的工作去了广州。
如果你在那个时候搞一个互联网研讨会，估计能到场的也就是20多人。
说不定里面就有王小波。
1992年前后，王小波写了两年“科技博客”
知乎网友Vernsu把王小波作品、书信里面和计算机、互联网有关的信息全都摘录出来做了一个网页，大家可以点击 王小波和编程 查看全文。
一共18条，其中14条写于1991年春节后到1993年春节前这两年时间里。1992年“更新”最为频繁，王小波写了自己做统计软件、输入法的事情，还有购买、维修计算机的经验之谈。
从中能看出来王小波是在美国读研究生期间接触的计算机，回国之后在人大负责一个计算机室，但是因为软件奇缺，又要做一些社会学研究的东西，所以开始自己接触编程。
王小波先后学了Fortran、汇编语言和C语言。为了做出软件需要的中文窗口和在电脑上输入自己的小说，他参考严氏拼音做了自己的输入法，实现了自定义拼音字库、输入后再修改这样的“高级功能”。
因为王小波的IBM PC/XT内存很小，李银河又不准他花钱买新的，所以他费了很大精力把软件的大小控制在55K以内，这让他很得意。但是因为turbo.c的原因，软件兼容性不太好，而且图形显示的速度一直不行，让他承认自己技不如人。
如果当时有互联网让王小波可以把这些文字共享出来，那他可以称得上是中国第一代科技博客作者。
但是1995年，中国接通互联网后不久，王小波的“科技博客”却停止更新了，最后一条是：
来不及创业
王小波如果不是这么耿直的Boy，他本来是有机会创业的，在他的“科技博客”里面，他已经看出来很多商机，
史玉柱、雷军的第一桶金都是汉卡，如果王小波抓住了软件汉化和中文输入这个“风口”，就不只是骗一些钱的事情了。
王小波还关心了一阵硬件的发展，研究了国内进口电子产品的政策。因为穷，所以锻炼了自己维修装配电脑的动手能力。如果继续朝着这个方向发展，王小波应该在中关村盘下一个档口销售、维修兼容机，说不定就没有后来刘强东的故事了。
可惜王小波很快见异思迁，开始把精力放到了文学上面，
我们知道写下了《大连金州不相信眼泪》的老榕，后来做了中国第一代B2B电子商务网站8848。一大批文艺青年，包括张向东和王微，先后投身媒体、门户和视频网站的创办。
更不要说今年是内容创业的风口，王小波若是活着，即使已经是接近65岁的人，也符合超级IP的设定，出来拿投资，Papi酱的1200万肯定是不在话下。
但是有个创业的外甥
然而王小波毕竟是个耿直的Boy。
我们没办法验证他如果创业究竟会发生什么，历史不容假设。
但是王小波在《我怎么做青年的思想工作》一文里面写过他的一个外甥姚勇（姚勇本尊 @王书 也跑过来答题了，大家速去围观），也是一个耿直的Boy，喜欢摇滚，喜欢文艺，又喜欢编程，一心把王小波当成楷模。爸妈的话不听，舅舅说话就听。
姚勇听舅舅的话考上了清华，毕业做了程序员，但是没放下摇滚梦，帮水木年华做了一段时间音乐。07年他接受《南方人物周刊》采访回忆王小波，说丁磊曾经来挖他做3D游戏引擎，他不认识丁磊拒绝了，后来发现丁磊居然成了中国首富，
所以就在07年，这个耿直的Boy上赶着颠儿颠儿去给马化腾写了《QQ炫舞》，全盘抄袭了《劲舞团》。
但是毕竟是王小波的外甥，抄完了在CSDN上骂娘，
所以你看，王小波要是生在了今天，说不定就跟这个外甥一样，去给人写网络小说、编段子、做游戏去了。做得不顺，也会吐槽骂娘，骂得比别人都好看。
王小波说过，
我们创业者，究竟是像他的那种人，还是不像他的那种人？
----------------------
本文作者老编辑，首发于微信公众号老道消息（laodaoxx），原标题《1995年，王小波的博客停止更新》。老编辑的团队正在招募一名对世界不太友善的女性写手，对时尚和设计要有点感觉，对科技互联网有点兴趣。简历发送到4@bushangban.com

说说我自己的理解。
王小波，新中国历史上最早的程序员之一，小说圈中的Geek！

早在90年，王小波就自学编程、C等语言
独立研发了中文编辑器和输入法
靠买软件赚了一大笔钱
深受很多中关村老板的喜爱
纷纷邀请他做资深程序员

当时的马化腾还蛰伏在深圳电信，腾讯还没有影子，马云还在思考中国黄页的出路，李彦宏还在加州的院子里种菜养花，日后统率中国互联网的BAT连一个萌芽都算不上啊！

这位神奇的程序员
究竟有着怎样的职场故事？
他是如何做到从编程到文学的无缝跨越的？
且看下文



王小波，骨子里有着极客的精神

早在90年代初，王小波就接触了计算机。1988年，他毕业于美国匹兹堡大学东亚研究中心，获硕士学位，那时就知道Macintosh，玩过IBMPS/2。

没有理想的应用软件，那就自己创造

早期，因为国内应用软件缺乏，尤其是中文编辑器和输入法。很喜欢写文字的王小波，就琢磨着，能不能自己编一套出来。说干就干，爱捣鼓东西的王小波就利用闲暇时间学习了FORTRAN，汇编，C等各种语言，接着又学习了数据结构，算法的相关知识，还有编译原理，终于创造出了中文编辑器和输入法。

在当时，这两个软件中的任何一个，都是大牛级的Geek才会去尝试的东西。这对一个当时爱写文字的他来说，简直天方夜谭，而且，类似的中文编辑器也就严援朝的CCDOS和求伯君WPS1.0，都是个人倾毕生所学以及背后的长城公司、金山公司投入大量的人力物力的结果。

通过卖软件，王小波也赚了一些钱，这算是最早的商业模式了。很多中关村老板，纷纷向王小波投去橄榄枝，邀请他加入公司做一名资深程序员，但被他一一拒绝。

有钱了干嘛？给自己投资呗。

身后这台就是王小波花大价钱买的286。王小波高兴得一塌糊涂，特意拍下了一张合照。

在当年3月份的日记中对此有翔实的记述，行文之间，甚是得意：

当问及王小波为什么要自己开发文字编辑程序？
王小波很淡然地说，别人编的软件我既使不惯，也信不过，就这么点原因。

这种坚韧就像是领导让你去改别人写的代码，看了几分钟之后，你一摔键盘，“费劲，不如自己重新写一个！”

在《似水柔情》一书中，王小波骨子里那种执拗精神展露无遗：“我觉得我还是我，我要拥有一切——今天要是不把那段C++程序调通，老子就不睡了......”

王小波，程序员撩妹之楷模
赢得了一整个银河

读过《黄金时代》、《红拂夜奔》的人，就会发现，王小波笔下的每一段故事都关于一个天真得有点轴的姑娘陪一个不合时宜的男人，度过了那个鸡飞狗跳的年代。管他世外有多乱，天真的还是天真，不合时宜的依旧不合时宜，像极了两颗钉子拧巴起来，钉在洪流里。

两颗钉子我行我素，洪流里的人面面相觑。

这就是王小波，敢说、敢写，简单，率真，是荒唐的时间里真诚的存在。

这也是王小波和李银河爱情故事的缩影。管他世外有多乱，天真的还是天真，不合时宜的依旧不合时宜，天真得有点轴的银河陪王小波，度过了那个鸡飞狗跳的年代。

在第二次和李银河见面时，王小波就向提出交往的要求。李银河在多年之后坦言到，“被其表白后，感到有些难以接受，他的长相……实在是种障碍，差一点就分手了。”

王小波却浑然不在意，还能趁机调侃“一想到你，我这张丑脸上就泛起微笑。” 即使再排斥他长相的人，也不会给他难堪了吧。

有着“整容般有趣灵魂”的他，每每给李银河写信总是这样开头：“你好哇，李银海“，字里行间透出类似孩子般的对爱的渴望与无助。



《爱你如爱生命》一书，记录了王小波对李银河说过的情话：

王小波给予银河的爱，是自由的，真诚的，率真的，像极了他自己。

王小波，IT届的一大“叛徒”
却找到了最好的路

纵观王小波的一生，他对于互联网的深度体验，与其在文学上面的尝试是可以等量齐观的。

玩硬件、写软件、上网写博客、用电脑写作、用软件卖钱……王小波的互联网经历，几乎涵盖了今日程序员生活、工作的各个方面。

然而，混熟了互联网的他，对其已提不起兴趣。

“我对微机已无兴趣，因为发现写小说也可以赚到钱。”

或者说的可以更直白点，王小波学编程就是为了赚钱养活热爱写作的他。

没有人限定了谁的一生该怎么走，不妨问问自己：你想怎么走。

王小波选择了写作。

1992年从北京大学、中国人民大学辞职，王小波成为自由撰稿人，陆续出版了《黄金时代》《白银时代》《青铜时代》《我的精神家园》等知名作品。他的唯一一部电影剧本《东宫·西宫》获阿根廷国际电影节最佳编剧奖，并且荣膺1997年戛纳国际电影节入围作品，使王小波成为在国际电影节为中国取得最佳编剧奖的第一人。


高晓松曾评价王小波，“以我有限的阅读量，王小波在我读过的白话文作家中绝对排第一，并且甩开第二名非常远，他在我心里是神一样的存在……王小波是可以和卡夫卡媲美的。”

一个比高晓松还丑的男子，却被高晓松称之为神一般的存在，可见王小波在文学上的天赋与创作是惊艳世人的。

王小波的这次叛变，是极其正确的。

可就在1997年，4月11日，一个很平常的日子，王小波心脏病突发，一个人悄悄地离开了世界。

在他去世的1997年，也是中国的互联网元年。

这一年，联想超越IBM成为中国个人电脑市场霸主，张朝阳创办了搜狐前身爱特信网站，丁磊在广州创办网易，王志东的四通在线拿到650万美金风投，四通利方体育沙龙上出现了一篇著名的帖子《大连金州没有眼泪》，当时的马化腾还蛰伏在深圳电信，腾讯还没有影子，马云还在思考中国黄页的出路，李彦宏还在加州的院子里种菜养花，日后统率中国互联网的BAT连一个萌芽都算不上。

或许我们可以打开脑洞，如果王小波不死，他除了文学创作，在互联网领域，可以去混论坛成为老榕、陈彤一般的人物，可以去创业成为张朝阳、丁磊，可以去布道成为凯文凯利……也可能在博客微博时代成为公知代表，也可能形象崩塌一败涂地，也可能成为自媒体达人每次打赏无数……

但这都不是王小波。做极客的王小波与做知识分子的王小波，是一个硬币的两面，用编程的写作互证，才能找到一个血肉丰满的王小波。



这些都是王小波。
用丑丑微笑面对世界的王小波；
通过自己努力改变生活的王小波；
在热爱面前，愿意倾尽所有的王小波。


王小波在杂文集《沉默的大多数》中［科学的美好］这样写到：
“我现在既不是化学家，也不是数学家，更不是物理学家。我靠写文章为生，与科技绝缘——只是有时弄弄计算机。这个行当我会得不少，从最低等的汇编语言到最新潮的C++全会写，硬件知识也有一些。但从我自己的利益来看，我还不如一点都不会，省得整夜不睡，鼓捣我的电脑，删东加西，最后把整个系统弄垮，手头又没有软件备份。”
-------------------------------------------
不得不说，《沉默的大多数》这本书读起来真的是拍案叫绝：

计算机水平很高，恶搞水平更高，他不高兴的时候把命名都写成caonima1，caonima2，caonima3
……
"
怎样评价《数码宝贝》第一部中的泉光子郎的编程水平？,"受到 @夜路川 答主勇于用python进化自己室友的激励，我顺便深挖了一下《数码宝贝》第一部第五集中光子郎在电脑上敲出的代码，终于把原始代码跑了出来，视频在最后。

虽然这段代码会自己乱动并让甲虫兽进化，显得狂拽酷炫吊炸天，但其实和第十集出现的代码是一模一样的（而动画里表现出的效果明显不同）。第十集里的代码反而看得更清楚一点。

根据这张图抽出文本如下：

如果想重新原汁原味地运行这段代码，首先要明确它的语言和版本。注意到注释和变量定义的语法更接近C系语言，但还有endwhile、func、endfunc等关键字，可以确定这不是VB或者其他主流的BASIC系语言。但是代码行号的格式暴露了这货肯定是个远古产物，我本来想看看光子郎电脑上这个文件的后缀名是什么，瞅了半天发现是“名称未设定 3”（见上图），失去线索的我只能开始疯狂的google……

在资料检索过程中主要发现两个问题。一是和这段代码语法相近的语言太多，比如VFP（Visual FoxPro，知道它的人肯定都老了）、VimScript、SAP采用的ABAP、早期PHP、伪代码的某个版本[1]、乃至德仪计算器的自创脚本语言等等。经过一个个的尝试，发现这些语言都是形似神不似，并不是真正的答案。

第二个问题是，如果仔细看光子郎的代码，你一定会陷入困惑，因为这段代码根本不像是有一个统一的语法规则。这里举两个栗子：

然而，在我就要放弃之际，一位国外先行者的博文给了我曙光（尽管文章里有一些错误）[2]。这个语言最终还是被查出来了……

事情要追溯到1987年，夏普发布了一款型号为X68000的PC。作为那个年代的电脑，搭载了10MHz的摩托罗拉68000CPU，1MB的内存，没有硬盘，且只在日本发售[3]。其操作系统是夏普为这一系列电脑专门设计的Human68k，《数码宝贝》中的那段代码，就属于这个操作系统专有的编程语言X-BASIC[4]。

这个系列的最后一款电脑在1993年发布（配置有所增强），而《数码宝贝》第一部是在1999年放映的，可见在动画制作时期，光子郎的代码也不算特别陈旧。

为了实际地跑一下这段代码，又经过一番艰辛的努力，我搞到了X68000的模拟器，还有操作系统Human68k（version 3.02）的磁盘映像，现在还能找到这些东西，真的要感谢极客阿宅们的默默奉献。

在模拟器里一开机，感觉就成功了一半：

为了能使代码顺利运行，还需加载SX-WINDOW映像。最后终于找到X-BASIC，一字不差地键入了光子郎的代码：

执行run命令，按代码要求输入一个1到2之间的浮点数值，下面就是见证奇迹的时刻了！

我不禁望向窗外的那只放屁虫，它仍在很悠闲地晒太阳，很遗憾我的甲虫兽并没有进化……原因很简单，这真的只是一段随机生成「coast」轮廓的代码。初始输入是一个阈值，从视频里看，显然阈值越高「海岸」越险峻，阈值越低「海岸」越平滑，很有可能是摘取了当时哪个游戏里地图生成器的一段源码。所以，导演又糊弄事呢？

为了跑这段代码，我查到了一些资料和工具，在此罗列一下，有兴趣可以看看。

最后话说回光子郎的编程水平，这段代码的难点主要在于用递归实现了分形图形的绘制，虽然没什么特别神秘的地方，但还是需要一定程度的编程技能和数学知识。原理上很像我之前绘制谢尔宾斯基三角形的代码：

但是光子郎当时好像上小学四年级？

而且在动画里，这段程序的输出是这样的，光子郎最后靠这个成功还原了他和美美所在的迷宫。

嘛，单从这里看，感觉能进科大少年班就是了……

彩蛋：当年X68000系列的电脑还随附一个名为060turbo[5]的软件，单独装在一个磁盘。这个软件的唯一功能是在屏幕上随机打印一张复杂的分形图形（疑似Mandelbrot图像？并不是很确定）。我用模拟器试了一下，效果确实惊艳，感觉光子郎在成为分形大师的路上还需努力23333。


2020年，光子郎用Python打开了数码宝贝世界的大门，也象征着我们的青春结束了。





不说别的，就看他写了什么。
坐标是数码宝贝第一部的第五集
这是和 黑安杜鲁兽 战斗时
光子郎用来进化甲虫兽的代码
发现这大概像一段VB代码。不敢确定。
根据诸位大佬的研究，光子郎的代码是X-Basic
破千了！！ 十分感谢各位大佬的抬爱。在各位大佬的指正下，把这个看不清楚写错的文本修正一下。
转文本如下：
对这段代码的个人理解如下：
定义一个浮点数 s
当 s<1 或 s>=2
s = input(""ratio 1 to 2"")
s = (s-1)/10+1
screen 估计是一个类？不知道有什么用
大佬指出 这是一个屏幕控制命令
sqr 估计是开方函数 s = s^2-1
定义四个浮点数
调用fractal函数 他给这个自定函数叫 分形
调用又一个自定函数 line 接受6个参数最后程序建了模所以估计是一个画线函数
这里声明前面的fractal函数 这还是一个递归函数
前面不知道变量s是啥所以这个代码从这里开始可读
经过大佬指出，s变量是x2,y2值的一个参数
四个浮点数
这是求两点距离的公式 l 是两点距离
如果这个距离小于2 或者 sp>=9
画条线后返回？
rnd 应该是随机数函数
递归调用
在这里根据编程语言的通性，笔者用python大概重构了一下这份代码。希望能够进化我的舍友。
基于前辈和大佬，对这份代码进一步修改：
运行结果如下：

光子郎的结果：

甲虫兽表示身体发烫。充满力量。
愿伟大的祖国繁荣富强，国庆节快乐。

前方多图，流量预警
————————————————————————
友情提示，本文配合此音乐服用效果更佳：
有句话叫做不看广告看疗效，我们就直接来看看光子郎都有过哪些优秀操作吧。
光子郎的成就不完全统计：
1.成功分析出了动力室的程序，并且用程序手动进化了甲虫兽（技术宅威武）。
2.成功获取遗迹的地图，并且还建立了语音通讯来指导美美如何走出这个迷宫一样的地方。
3.分析了发现希望徽章后出现的那个山洞里面的程序，直接得出了数码世界是建立在现实世界之上的结论。（我觉得这段是光子郎最神的一幕。）
4.发现了分子兽在金字塔之下的密道。
5.基本上找出了石盘上卡牌摆放的内在规律。（之前在水底，玄内说的那些东西也基本上只有他才能完全理解，最后干脆单独和他说。）
6.成功设置好了玄内传给他的“数码结界”程序，正是靠着这个程序才保护了他一家人的安全。
（你看不见我~你看不见我~你看不见我……）
7.连接了巨鲸兽的视觉系统可以看见巨鲸兽所看见的，并且还配合嘉儿的哨声完成了一个“声纳系统”。
8.通过查询玄内老人给他的数码宝贝图鉴，光子郎发现了战斗暴龙兽的杀手锏“恐龙克星”，给了孩子们一针强心剂。
9.虽然一开始由于使用电脑造成暴露目标，但是光子郎很快就把他和太一的方位变成了”禁忌的多重存在“让敌人一头雾水。
10.没错，重头戏来了。在剧场版《我们的战争游戏》里，光子郎开始疯狂地秀起了操作(值得一提的是，在另一部同为细田守指导的电影《夏日大作战》里，主角也是一个技术宅)：
(1).看一个人的技术水平，可以看和他交流的都是些什么水平的人（光子郎自己也说过，在数码世界里最希望的事就是回到家上网发邮件给他的朋友）：
当然了，更diao的在后面，这水是有多深…
(2).小试牛刀，几下子就成功连上ISDN网络。
(3).在由于地狱使者兽入侵导致掉线以后，通过卫星电话连接上了外国节点再次进入了网络。
(4).最后的关头，光子郎意识到BOSS的速度太快导致无法锁定，直接快速把巨量的邮件全转发到BOSS的邮箱，于是，BOSS卡机了……，被奥米加兽成功击杀。
10.剧场版里的夏天过去了，在第二部的故事里光子郎依然风头强劲，多次发挥重要作用。
(1).仅靠一张杂志照片就大概分析出了一乘寺贤家所在的大体位置（细思极恐）。
(2).提出只要有D3暴龙机（顺便说一下这个名字也是他给取的），任何一台上网的电脑都可以打开数码世界大门的假设并且应验。
整个第二部里的光子郎，基本上分析与联络玄内的事情大部分都是他在做，作为一代二代补充性质的广播剧《两年半的休假》里也提到光子郎一直就联系着玄内并且早就知道了被选召的孩子们不止他们几个了。
给第二部主角做知识辅导也是经常的事情。比如解释数码宝贝的合体进化（他还专门为此新做了一个词：“Joint + Progress=Jogress”），又比如下图里向一乘寺贤解释为什么新的被选召的孩子们的神圣计划会变形。
11.而在第二部的剧场版《超恶魔兽的反击》里一开始，光子郎就充当了一个召集者的角色（毕竟网络世界要是出了什么异常肯定是他最先知道的）。
在太一阿和都要把最重要的戏份让给新主角，阿助差不多永远在考试or复习的情况之下，光子郎在技术支援方面的戏份还是那么吃重，真是让人不禁有些唏嘘——
好了关于他的事绩基本上说得差不多了，不得不提的是他还有一个非常可贵的品质：
对计算机的专注。
第一集开始就在自己一个人摆弄电脑。
太一觉得“电脑敲一下就好”，被光子郎赶紧拦下了。
还是素娜最能了解别人的感受啊。
唉…并且作为一个光美党，我要先去哭会儿…：
由于只注意遗迹里的文字，不理会美美，结果人家都气哭了，说他是个笨蛋。（一声叹息）
不过也就是在这个岛上，美美明白了光子郎研究文字的意义，光子郎也明白了不能单纯靠电脑的运算。于是到了第二部的剧场版里大家就玩得很开心了…
总之不管别的了，反正技术宅你今年一定要把美美给追到手啊听到了吗！加油！QAQ
新PV出了，美美早已看穿了一切，哈哈。
————————————————————————————————
11月新剧场版上映更新！
《数码宝贝大冒险Tri.》的第一章「再会」已经上线了。
我们的光子郎依旧是操作犀利,意识超前,输出恐怖。
距离第二部已经又过了3年，人类世界再度出现迷之怪物。
八个孩子们再度聚首，不得不说光子郎还是那个最能透彻地分析情况的人啊（这时要是能再响起技术宅专属BGM就好啦）：
第二，神圣计划发生故障（被阿武先说了）
（不过在这里还是要小小吐槽一下，你们倒是好好听光子郎讲的啊…果然光子郎的水平已经进化到了大家都不明觉厉的程度了吗？……诶诶，太一跟阿和怎么又吵起来啦。扶额）
（还有阿助啊……你其实是专程来虐狗的吧！~我也想问，对方是人类吗…【喂！）
(把光子郎都惊呆了…)
（哈哈哈此刻大家的表情都神同步了）
好了，接下来光子郎开始蓄能了，大家赶紧做好心理准备。
先是和阿武聊天的时候，表示自己早已是买买买的一员了（按照剧场版的设定那还是在05年啊）。
（其实光子郎你的小心思啊，其实大家都明白的啦…）
接下来就又是光子郎的秀操作时间了，为了挑选好看的衣服，他开发了一款“光子郎环游世界”（大雾）软件。即使宅在家里也可以各种衣服换着穿啦。
（哈哈，甲虫兽你真是为光子郎操碎了心啊）
好啦，镜头一转，我们又来到了……
嗯，看来美国网友真的是没白交啊。
前方核能预警！
看到这儿的时候我已经不由自主地献上了膝盖…
一个电脑制作的虚拟空间可以快速地了存入和取出数码宝贝，简直就像是自己造了一个“数码世界”一样啊。这时光子郎的帅气程度我感觉已经超越分析出数码世界奥秘那集了。
终于，就在光子郎的办公室里，数码宝贝总算是有了媲美隔壁棚精灵球一样的黑科技了（虽说六代好像也有类似的技术，不过对于大冒险系列来说这还是首次吧）。虽然端口携带不是很方便，但是也可以用数量来弥补嘛。
相信不少人会有一个疑问，太一明明把护目镜送给了大辅，为什么在Tri.又戴上护目镜了呢？
嘿嘿，答案就是光子郎熬夜只睡了三个小时给太一做了新的护目镜！
技术宅亲手制作的护目镜当然不止是用来耍帅的。
戴上以后才发现另有玄机（谷歌赶紧开发这样的应用吧，哪怕只是模拟的也好啊）
而太一也正是通过这个在摩天轮上发现了巨大的数据错位。
故弄玄虚装神秘的阿尔法兽出现了。光子郎马上动用电脑里的图鉴（肯定也是优化过的了，还带扫描分析的）。只可惜相关数据还是太少了。
是的，第一章里光子郎的表现就是这么抢眼。
但我还是要说！光子郎你就不要再各种迷之脸红啦，赶紧就从了美美吧！你看看连阿助都有女朋友了（喂！），你到底还在等什么呢？
众人：有情况
加油啊光子郎！明年再见！
————————————————————————————————
《数码宝贝大冒险Tri.》的第二章「决意」上映更新！
光子郎依旧充当着的技术核心作用。总是能第一个知道有突发情况出现并且及时地通知给大家。
并且一直在根据最新情况分析这次危机的原因：
说到这个感染的问题啊…
喂！数码兽你们又在乘机卖萌了！萌死我算了…
哈哈不过他们也不用太担心，因为光子郎也不是毫无准备的啊：
在收到一封神秘电子邮件后，他进行了解析，果然又是与数码世界有关的信息。不过答案真正揭晓，又是在之后的事情了。
在扭曲消失以后光子郎及时地打开了观测数码世界的窗口（虽然不能够进入，但是在数码世界的数码兽能听到电脑那头孩子们的声音）：
呐呐呐，至于光子郎和美美的事情呢…
怎么说呢…光子郎说了句“美美太以自我为中心了”。美美的心里明显是很不好受的（当时第一反应：？？？我去，官方你不要这样…）
嘛。不过乐天的美美还是在大家（特别是望月芽心）的鼓励下调整好了状态。光子郎更是看到她的照片立马就跑过来了。
哈哈一副要面试了的表情：
哈哈哈光子郎你还是蛮帅的。不过不要老是害羞啦勇敢一点吧！你看美美多大方啊。
————————————————————————————————
《数码宝贝大冒险Tri.》的第三章「告白」上映更新
这章，光子郎也陷入困难了，虽然他可能已经算是孩子们里面知道的最多了。
数码兽们，还是被感染了……而且还不止一只，甚至光子郎也清理不出头绪……
光子郎开始没日没夜地钻研，几近崩溃的状态。没办法，这集他是主角，真正的考验来了。
当然光子郎毕竟是光子郎。从这句话里就能够看出来。
感觉甲虫兽的话是互文，“希望”对应的是光子郎的“知识”。
终于，光子郎调查清楚了！错位的发生是因为原本的二进制被篡改成了一个数码数据无法处理的计数法。
而光子郎很快也通过数据分析知道了感染发生的根源
最后关头，光子郎还在错位空间里创建了一个备份场，不单能使数码宝贝不被重启，还能剔除感染。可惜最后一个都没有留住，哭瞎了QAQ
调整好了数码世界的坐标（之前也是他一直在联系众人再回去）
图鉴再度发挥了作用
就这样，被选召的孩子们又一次前往数码世界展开了冒险……
光子郎的故事，未完待续。
"
